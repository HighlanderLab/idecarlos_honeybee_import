sample.interval=20000
"sample.int" "sample" "array" "quickHaplo" 
"gzfile" "readRDS" "packageDescription" "super$initialize" "initialize" "SimParamBee$new" 
"calcGenParam" "SP$addTraitA" 
"str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueAsStringImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" ".rs.describeObject" 
"anyDuplicated" "[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"anyDuplicated" "[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"Ops.data.frame" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"anyDuplicated" "[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"[[.data.frame" "[[" "Ops.data.frame" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
".subset2" "<Anonymous>" "[[.data.frame" "[[" "rbind" "<Anonymous>" "do.call" "as.matrix" "editCsdLocus" "createCastePop" "createVirginQueens" 
"getGv" "resetPop" "setMarkerHaplo" "editCsdLocus" "createCastePop" "createVirginQueens" 
".subset2" "<Anonymous>" "[[.data.frame" "[[" "[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"<Anonymous>" "[[.data.frame" "[[" "[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"%in%" "[[.data.frame" "[[" "[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"Ops.data.frame" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"setHaplo" "setMarkerHaplo" "editCsdLocus" "createCastePop" "createVirginQueens" 
"createDH2" "makeDH" "createCastePop" "createDrones" 
"createDH2" "makeDH" "createCastePop" "createDrones" 
"createDH2" "makeDH" "createCastePop" "createDrones" 
"createDH2" "makeDH" "createCastePop" "createDrones" 
"createDH2" "makeDH" "createCastePop" "createDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "createDrones" 
"as" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "createDrones" 
"createDH2" "makeDH" "createCastePop" "createDrones" 
"createDH2" "makeDH" "createCastePop" "createDrones" 
"createDH2" "makeDH" "createCastePop" "createDrones" 
"createDH2" "makeDH" "createCastePop" "createDrones" 
".local" "[" "[" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullDroneGroupsFromDCA" 
".local" "[" "[" "nInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"%in%" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"@<-" ".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
"is.list" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
"[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"%in%" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"@<-" ".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"is" "isPop" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"is" "isPop" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"match.fun" "vapply" "order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"@<-" ".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"stopifnot" "is" "isPop" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"vapply" "order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"rownames" "reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"as" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"getClass" "new" "asMethod" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "SIMplyBee::cross" 
"reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"%in%" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
".identC" "<Anonymous>" "cross" "SIMplyBee::cross" 
"validObject" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"tryCatch" "try" "validObject" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "SIMplyBee::cross" 
"is" "isPop" "reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unique" "simplify2array" "sapply" "reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"is" "isPop" "isCaste" "isVirginQueen" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"validObject" "cross" "SIMplyBee::cross" 
".getClassesFromCache" "getClassDef" "validObject" "cross" "SIMplyBee::cross" 
"initialize" "new" "asMethod" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"grepl" "reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"as.integer" "matrix" "convToImat" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"is" "isPop" "reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"lapply" "do.call" "mergePops" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"paste" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "SIMplyBee::cross" 
".getMethodsTable" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"aperm" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
".identC" "possibleExtends" "validObject" "cross" "SIMplyBee::cross" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"isPop" "setMisc" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"@<-" ".local" "[" "[" "is" "isPop" "cross" "SIMplyBee::cross" 
"[" "isCaste" "isVirginQueen" "cross" "SIMplyBee::cross" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"validObject" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"sapply" "reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"getGeno" "pullSegSiteGeno" "getSegSiteGeno" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"apply" "calcBeeAlleleFreq" 
"apply" "calcBeeAlleleFreq" 
"FUN" "apply" "calcBeeAlleleFreq" 
"FUN" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"apply" "calcBeeAlleleFreq" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "createMultiColony" 
"isFALSE" "validObject" "resetEvents" "createColony" "createMultiColony" 
"validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"stopifnot" "is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "createColony" "createMultiColony" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"rev" "validObject" "createColony" "createMultiColony" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "resetEvents" "createColony" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is.list" "getClassDef" "is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "createColony" "createMultiColony" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "createColony" "createMultiColony" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".getMethodsTable" "as" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"rev" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"possibleExtends" "validObject" "createColony" "createMultiColony" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "createColony" "createMultiColony" 
"anyNA" "Ops.factor" "isCaste" "isQueen" "createColony" "createMultiColony" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"stopifnot" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "createColony" "createMultiColony" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"validObject" "createColony" "createMultiColony" 
"is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"getClassDef" "validObject" "resetEvents" "createColony" "createMultiColony" 
"vapply" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"all" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"%in%" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"all" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"getClassDef" "is" "isColony" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
".identC" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"length" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"resetEvents" "createColony" "createMultiColony" 
"vapply" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "createMultiColony" 
"getClassDef" "possibleExtends" "validObject" "createColony" "createMultiColony" 
"nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "createColony" "createMultiColony" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "createColony" "createMultiColony" 
"slot" "ifelse" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
"is.atomic" "ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".identC" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "createColony" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "createMultiColony" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "createMultiColony" 
"is" "isMultiColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"checkSexes" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
"validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "createColony" "createMultiColony" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "createMultiColony" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "createMultiColony" 
"getClassDef" "possibleExtends" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
".identC" "possibleExtends" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"mergeMultGeno" "mergePops" "data_rec" 
"[.factor" "[" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "is" "isPop" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "data_rec" 
"possibleExtends" "<Anonymous>" ".local" "[" "[" "is" "isPop" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "data_rec" 
"getClassDef" "is" "selectInd" "FUN" "lapply" "getFathers" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"vapply" "order" "selectInd" "FUN" "lapply" "getFathers" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "FUN" "lapply" "getFathers" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"is.factor" "duplicated.default" "duplicated.matrix" "duplicated" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"sys.parent" "sys.function" "formals" "match.arg" "order" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"match.fun" "sapply" "reduceDroneHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"is.na" "na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "is" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"vapply" "order" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"paste" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"any" "order" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"which" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"getLociNames" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"is.na" "na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"is" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"stopifnot" "is" "isPop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"array" "asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"strsplit" "lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"grepl" "reduceDroneHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"convToImat" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"array" "asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"array" "asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"is.na" "na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"isCsdActive" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"convToImat" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "is" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"paste0" "FUN" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"aperm" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
".identC" "<Anonymous>" ".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"isPop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"rev" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "possibleExtends" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"getClass" "<Anonymous>" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"<Anonymous>" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"class" ".identC" "possibleExtends" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"<Anonymous>" ".local" "[" "[" "selectInd" "FUN" "lapply" "getFathers" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"<Anonymous>" "isCsdActive" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"stopifnot" "is" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"is" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"paste" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"FUN" "lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unique.default" "unique" "simplify2array" "sapply" "reduceDroneHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"paste" "%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"rownames<-" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"...elt" "stopifnot" "is" "isPop" "reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"tolower" "getResponse" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "FUN" "lapply" "getFathers" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"length" "is" "isColony" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"slot" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"all" "stopifnot" "is" "isColony" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"is" "isPop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"order" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"strsplit" "lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"rev.default" "rev" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"any" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"...elt" "stopifnot" "is" "isMultiColony" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"vapply" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "transMat" "addError" "calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"eval" "match.arg" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "...elt" "stopifnot" "addError" "calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is.na" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "transMat" "addError" "calcPheno" "setPheno" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"$" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"attributes" "ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"validObject" "buildUp" "buildUp" 
"stopifnot" "all.equal.numeric" "all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "...elt" "stopifnot" "addError" "calcPheno" "setPheno" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"attr" "packageSlot" ".classEnv" "as" "checkSlotAssignment" "slot<-" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"checkSexes" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"...elt" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"<Anonymous>" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"length" "ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"attr.all.equal" "all.equal.numeric" "all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "transMat" "addError" "calcPheno" "setPheno" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"rnorm" "getResponse" "selectInd" "getCastePop" "getQueen" "nInd" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"ifelse" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"...length" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"...length" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is.atomic" "ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"eval" "match.arg" "order" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"isSymmetric.matrix" "isSymmetric" "transMat" "addError" "calcPheno" "setPheno" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"$" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"any" ".deparseOpts" "deparse" "transMat" "addError" "calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "transMat" "addError" "calcPheno" "setPheno" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"attributes" "ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is" "isColony" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"<Anonymous>" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"unique" "simplify2array" "sapply" "...elt" "stopifnot" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"checkSlotAssignment" "slot<-" "asMethod" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"isMultiColony" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".requirePackage" ".classEnv" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "transMat" "addError" "calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"%in%" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"stopifnot" "is" "isColony" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGeno" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"vapply" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "transMat" "addError" "calcPheno" "setPheno" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"validObject" "buildUp" "buildUp" 
"...length" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "...elt" "stopifnot" "addError" "calcPheno" "setPheno" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"tryCatchList" "tryCatch" "try" "validObject" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"buildUp" "buildUp" 
".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"paste" ".sigLabel" ".findMethodInTable" ".quickCoerceSelect" "as" "checkSlotAssignment" "slot<-" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"paste" ".sigLabel" ".findMethodInTable" ".quickCoerceSelect" "as" "checkSlotAssignment" "slot<-" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"possibleExtends" "validObject" "buildUp" "buildUp" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"isS4" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"vapply" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "...elt" "stopifnot" "addError" "calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"isCsdActive" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGeno" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is.data.frame" "colnames" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"na.omit" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"@<-" ".local" "[" "[" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"parent.frame" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"as.matrix" "unname" "eigen" "transMat" "addError" "calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".quickCoerceSelect" "as" "checkSlotAssignment" "slot<-" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"match.arg" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".identC" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"eval" "match.arg" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "transMat" "addError" "calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".local" "[" "[" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGeno" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"<Anonymous>" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"grepl" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "buildUp" "buildUp" 
"any" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"all" "stopifnot" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "...elt" "stopifnot" "addError" "calcPheno" "setPheno" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".identC" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".getClassesFromCache" "getClassDef" "is" "isMultiColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"validObject" "buildUp" "buildUp" 
"is.list" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"...elt" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"sys.function" "formals" "match.arg" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getClass" "<Anonymous>" "setPheno" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"parent.frame" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"<Anonymous>" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"<Anonymous>" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isColony" "isQueenPresent" "addCastePop" "addDrones" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"<Anonymous>" ".local" "[" "[" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isColony" "hasCollapsed" "addCastePop" "addDrones" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is.function" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "buildUp" "buildUp" 
"order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"isFALSE" "validObject" "initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"allNames" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"length" "is" "setPheno" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"%in%" ".getGeneric" "getGeneric" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"<Anonymous>" "lapply" "sapply" "...elt" "stopifnot" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"eval" "match.arg" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "...elt" "stopifnot" "addError" "calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"mode" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "...elt" "stopifnot" "addError" "calcPheno" "setPheno" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"length" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"checkSexes" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".getClassesFromCache" "getClassDef" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"@<-" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"paste" ".sigLabel" ".findMethodInTable" ".quickCoerceSelect" "as" "checkSlotAssignment" "slot<-" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"length" "isTRUE" "which" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"$" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"stopifnot" "is" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "buildUp" "buildUp" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"match.arg" "order" "selectInd" "getCastePop" "getQueen" "is" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "buildUp" "buildUp" 
".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"...elt" "stopifnot" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getClass" "<Anonymous>" ".local" "[" "[" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"$" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isMultiColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"attr.all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "transMat" "addError" "calcPheno" "setPheno" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"validObject" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"nInd" "ifelse" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "is" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"all.equal.numeric" "all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "transMat" "addError" "calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is.list" "getClassDef" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"validObject" "buildUp" "buildUp" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"checkSexes" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "buildUp" "buildUp" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".class1" "as" "checkSlotAssignment" "slot<-" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"<Anonymous>" "createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "is" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".local" "[" "[" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"parent.frame" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"stopifnot" "is" "isMultiColony" "isQueenPresent" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"<Anonymous>" "checkSexes" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"all.equal.numeric" "all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "...elt" "stopifnot" "addError" "calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGeno" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".identC" "possibleExtends" "validObject" "setLocation" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "createColony" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"<Anonymous>" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"[" "selectInd" "getCastePop" "getQueen" "nInd" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"attr.all.equal" "all.equal.numeric" "all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "...elt" "stopifnot" "addError" "calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"initialize" "initialize" "new" "createColony" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"validObject" "resetEvents" "createColony" "split" "split" 
"is" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"all.equal" "isSymmetric.matrix" "isSymmetric" "...elt" "stopifnot" "addError" "calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is.data.frame" "colnames<-" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"is" ".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"[" "[" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isMultiColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "setLocation" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"unique" "factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "selectInd" "getCastePop" "getQueen" "nInd" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"all.equal" "isSymmetric.matrix" "isSymmetric" "...elt" "stopifnot" "addError" "calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"formals" "match.arg" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "...elt" "stopifnot" "addError" "calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "split" "split" 
"simplify2array" "sapply" "...elt" "stopifnot" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"getClassDef" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"@<-" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "validObject" "createColony" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "createColony" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"[[<-" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"initialize" "initialize" "new" "createColony" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
".local" "[[<-" "[[<-" "split" 
"nCaste" "nQueens" "isQueenPresent" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"rev" "validObject" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isColony" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "createColony" "split" "split" 
"...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"t" "mode" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "transMat" "addError" "calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"is" "isColony" "nCaste" "nQueens" "isQueenPresent" "createCastePop" "createVirginQueens" "split" "split" 
"na.omit" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
".local" "[" "[" "pullInd" "pullCastePop" "pullWorkers" "split" "split" 
"<Anonymous>" ".local" "[" "[" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"@<-" ".local" "[" "[" "selectInd" "pullInd" "pullCastePop" "pullWorkers" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"validObject" "createColony" "split" "split" 
"length" "ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"grepl" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "setLocation" "split" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"isCaste" "isQueen" "createColony" "split" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"vapply" "order" "selectInd" "pullInd" "pullCastePop" "pullWorkers" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
".identC" "possibleExtends" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".identC" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"class" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "possibleExtends" "validObject" "createColony" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"FUN" "vapply" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "...elt" "stopifnot" "addError" "calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"colnames" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".identC" "possibleExtends" "validObject" "initialize" "initialize" "new" "createColony" "split" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"getCastePop" "getQueen" "nInd" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"all.equal" "isSymmetric.matrix" "isSymmetric" "transMat" "addError" "calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
".identC" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"setLocation" "split" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "setLocation" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"selectInd" "pullInd" "pullCastePop" "pullWorkers" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"tryCatchList" "tryCatch" "try" "validObject" "setLocation" "split" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "setLocation" "split" "split" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"stopifnot" "is" "isColony" "isQueenPresent" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "transMat" "addError" "calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"$" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"anyDuplicated" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "createColony" "split" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"checkSexes" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"stopifnot" "is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"is.list" "getClassDef" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"length" "...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"slot" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"%in%" "pullInd" "pullCastePop" "pullWorkers" "split" "split" 
".getClassesFromCache" "getClassDef" "possibleExtends" "validObject" "setLocation" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"tolower" "getResponse" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "setLocation" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "createColony" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isColony" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "setLocation" "split" "split" 
"getClassDef" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"match.fun" "sapply" "...elt" "stopifnot" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"@<-" ".local" "[" "[" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "createColony" "split" "split" 
"match.arg" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "possibleExtends" "validObject" "initialize" "initialize" "new" "createColony" "split" "split" 
"validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "createColony" "split" "split" 
"...elt" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"isCaste" "isVirginQueen" "createColony" "split" "split" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
".local" "[" "[" "pullInd" "pullCastePop" "pullWorkers" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "pullInd" "pullCastePop" "pullWorkers" "split" "split" 
"which" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".local" "[" "[" "pullInd" "pullCastePop" "pullWorkers" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"unique" "factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
".identC" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"rev" "validObject" ".local" "[[<-" "[[<-" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"sampAllComb" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "createColony" "split" "split" 
"vapply" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".identC" "possibleExtends" "validObject" "createColony" "split" "split" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"createColony" "split" "split" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"possibleExtends" "initialize" "initialize" "new" "createColony" "split" "split" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"isSymmetric.matrix" "isSymmetric" "...elt" "stopifnot" "addError" "calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"validObject" ".local" "[[<-" "[[<-" "split" 
".getClassesFromCache" "getClassDef" "getClass" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".local" "[[<-" "[[<-" "split" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"stopifnot" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "...elt" "stopifnot" "addError" "calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"rev" "validObject" "setLocation" "split" "split" 
"isColony" "isQueenPresent" "createCastePop" "createVirginQueens" "split" "split" 
".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"vapply" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "...elt" "stopifnot" "addError" "calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "split" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"validObject" ".local" "[[<-" "[[<-" "split" 
".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"FUN" "vapply" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "...elt" "stopifnot" "addError" "calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getMethodsTable" "as" "initialize" "initialize" "new" "createColony" "split" "split" 
"...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"getClassDef" "is" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"sys.function" "formals" "match.arg" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "transMat" "addError" "calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"as.character" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"getClassDef" "validObject" "createColony" "split" "split" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"as" "initialize" "initialize" "new" "createColony" "split" "split" 
"is.na" "isFALSE" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" 
"tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
".getClassesFromCache" "getClassDef" "validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"tryCatchList" "tryCatch" "try" "validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"possibleExtends" "validObject" ".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
".getClassesFromCache" "getClassDef" "validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"length" "...elt" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "reQueen" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"all" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
".getClassesFromCache" "getClassDef" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
".getClassesFromCache" "getClassDef" "is" "isPop" "reQueen" "reQueen" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "is" "isPop" "reQueen" "reQueen" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
".getClassesFromCache" "getClassDef" "possibleExtends" "validObject" "reQueen" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"as" "checkSlotAssignment" "slot<-" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"is" "isPop" "isCaste" "isQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"is" ".findMethodInTable" ".quickCoerceSelect" "as" "checkSlotAssignment" "slot<-" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
".identC" "possibleExtends" "validObject" "reQueen" "reQueen" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "reQueen" "reQueen" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"...elt" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "is" "isPop" "reQueen" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"length" "validObject" ".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"possibleExtends" "validObject" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"levels" "Ops.factor" "isCaste" "isQueen" "reQueen" "reQueen" 
"is" "isPop" "reQueen" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"...elt" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"rev.default" "rev" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"as" "checkSlotAssignment" "slot<-" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"unique" "simplify2array" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"getClassDef" "possibleExtends" "validObject" ".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
"...elt" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"is" "isPop" "isCaste" "isQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"getClassDef" "is" "isColony" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "reQueen" 
"paste" ".sigLabel" ".findMethodInTable" ".quickCoerceSelect" "as" "checkSlotAssignment" "slot<-" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "pullColonies" 
"possibleExtends" "validObject" "createColony" "swarm" "swarm" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getDrones" "swarm" "swarm" 
"is.list" "getClassDef" "is" "isPop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"anyStrings" "validObject" "createColony" "swarm" "swarm" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getDrones" "swarm" "swarm" 
"possibleExtends" "validObject" "resetEvents" "createColony" "swarm" "swarm" 
".local" "[" "[" "selectInd" "pullInd" "pullCastePop" "pullWorkers" "swarm" "swarm" 
"is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "swarm" "swarm" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"is" "selectInd" "getCastePop" "getWorkers" "swarm" "swarm" 
"match.arg" "order" "selectInd" "getCastePop" "getDrones" "swarm" "swarm" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"<Anonymous>" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"selectInd" "getCastePop" "getQueen" "nInd" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getDrones" "swarm" "swarm" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "setLocation" "swarm" "swarm" 
"is" ".findMethodInTable" ".quickCoerceSelect" "as" "initialize" "initialize" "new" "createColony" "swarm" "swarm" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "c" "c" "c" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "c" "c" "c" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "pullColonies" 
"parent.frame" "tryCatch" "try" "validObject" "removeCastePop" "removeQueen" "supersede" "supersede" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
".local" "[" "[" "selectInd" "supersede" "supersede" 
"all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "...elt" "stopifnot" "addError" "calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "supersede" 
"checkSlotAssignment" "slot<-" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"simParamBee$changeCaste" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"simParamBee$changeCaste" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"%in%" ".getGeneric" "getGeneric" "as" "checkSlotAssignment" "slot<-" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"vapply" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"Ops.factor" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"rev" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"get" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "getCastePop" "getDrones" "createDCA" 
"c" "do.call" "mergePops" "createDCA" 
"mergeMultGeno" "mergePops" "createDCA" 
".local" "[" "[" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"!" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"getClass" "<Anonymous>" ".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"stopifnot" "is" "isPop" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"<Anonymous>" ".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"is.list" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"is" "isColony" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"unique.default" "unique" "factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
".sigLabel" ".findMethodInTable" ".quickCoerceSelect" "as" "checkSlotAssignment" "slot<-" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"isCaste" "isQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
".local" "[" "[" "selectInd" "cross" "cross" 
"is" "isColony" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"as" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "cross" "cross" 
".identC" "<Anonymous>" "setMisc" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"tryCatch" "try" "validObject" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"<Anonymous>" ".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isPop" "cross" "cross" 
"[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
".getClassesFromCache" "getClassDef" "validObject" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"is" "isColony" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"is" "isPop" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"paste" "%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"attributes" "factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"validObject" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"slot" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"toupper" "checkSexes" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
".identC" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"aperm" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"possibleExtends" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"environment" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"is.na" "factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isPop" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
".identC" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is.list" "getClassDef" "is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"cross" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"getClassDef" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"$" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"isQueen" "reQueen" "cross" "cross" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"levels" "Ops.factor" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"get" "isQueen" "reQueen" "cross" "cross" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"paste" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"validObject" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"rev" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"tryCatch" "try" "validObject" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"possibleExtends" "<Anonymous>" "reQueen" "cross" "cross" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"attributes" "ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"isTRUE" "anyStrings" "validObject" "cross" "cross" "cross" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"class" ".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "cross" "cross" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"stopifnot" "is" "isColony" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
".identC" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"...length" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "cross" "cross" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unique" "factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "cross" "cross" 
"is" "isPop" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"paste" ".sigLabel" ".findMethodInTable" ".quickCoerceSelect" "as" "checkSlotAssignment" "slot<-" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "cross" "cross" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
".identC" "possibleExtends" "validObject" "reQueen" "cross" "cross" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"any" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"getClassDef" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"mergeMultGeno" "mergePops" "createDCA" 
".local" "[" "[" "pullDroneGroupsFromDCA" "cross" 
"%in%" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"@<-" ".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"asMethod" "as" "checkSlotAssignment" "slot<-" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"validObject" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"unique" "factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"stopifnot" "is" "isColony" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"integer" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"slot" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"all" "reQueen" "cross" "cross" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
".classEnv" "validObject" "cross" "cross" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"stopifnot" "is" "isColony" "hasCollapsed" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"rev" "validObject" "reQueen" "cross" "cross" 
"rownames<-" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is.list" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"getClassDef" "possibleExtends" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"checkSexes" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"!" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isPop" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"is.na" "which" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"[" "isCaste" "isDrone" "cross" "cross" "cross" 
"is" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
".identC" "possibleExtends" "validObject" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"all" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"c" "factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"getNamespace" ".requirePackage" ".classEnv" "as" "checkSlotAssignment" "slot<-" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"tryCatch" "try" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"rev.default" "rev" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"try" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"is" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"stopifnot" "is" ".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "cross" "cross" 
"possibleExtends" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"isS4" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "cross" "cross" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"getClassDef" "possibleExtends" "validObject" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"stopifnot" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "cross" "cross" 
"$" "paste" "%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"try" "validObject" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"@<-" ".local" "[" "[" "selectColonies" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "pullColonies" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"resetEvents" "createColony" "swarm" "swarm" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "swarm" "swarm" 
"vapply" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "swarm" "swarm" 
"c" "c" "c" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "pullColonies" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"simParamBee$changeCaste" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"isQueenPresent" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"nCaste" "nQueens" "isQueenPresent" "supersede" "supersede" 
"is.na" "ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "supersede" 
"nCaste" "nQueens" "isQueenPresent" "supersede" "supersede" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "supersede" 
"simParamBee$changeCaste" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"...elt" "stopifnot" "is" "isMultiColony" "isQueenPresent" "supersede" "supersede" 
".getClassesFromCache" "getClassDef" "validObject" "supersede" "supersede" 
"pmax" "t" "transMat" "addError" "calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "transMat" "addError" "calcPheno" "setPheno" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"slot" "asMethod" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"ifelse" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"class" ".identC" "is" ".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".identC" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"checkSlotAssignment" "slot<-" "asMethod" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"eval" "match.arg" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "transMat" "addError" "calcPheno" "setPheno" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"unlist" "simplify2array" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getClassDef" "getClass" "checkSlotAssignment" "slot<-" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".getClassesFromCache" "getClassDef" "is" "isColony" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"order" "selectInd" "getCastePop" "getQueen" "is" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".getClassesFromCache" "getClassDef" "is" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"is" "isPop" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".getClassesFromCache" "getClassDef" "validObject" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "is" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"$" "checkSexes" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"all" "order" "selectInd" "getCastePop" "getQueen" "is" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".identC" "possibleExtends" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"data.class" "all.equal.numeric" "all.equal" "all.equal.list" "all.equal" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "...elt" "stopifnot" "addError" "calcPheno" "setPheno" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"as.character" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"all" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"...elt" "stopifnot" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"ifelse" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"isSymmetric.matrix" "isSymmetric" "transMat" "addError" "calcPheno" "setPheno" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"anyNA" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"anyNA" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"match.arg" "order" "attr.all.equal" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "transMat" "addError" "calcPheno" "setPheno" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".identC" "possibleExtends" "validObject" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"tryCatch" "try" "validObject" "initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
".identC" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getClassDef" "is" ".findMethodInTable" ".quickCoerceSelect" "as" "checkSlotAssignment" "slot<-" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"validObject" "initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "replaceCastePop" "replaceDrones" 
"class" ".identC" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"duplicated.default" "duplicated" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".identC" "is" "setPheno" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"isS4" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
".identC" "possibleExtends" "<Anonymous>" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"t" "transMat" "addError" "calcPheno" "setPheno" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"eval" "match.arg" "order" "selectInd" "getCastePop" "getQueen" "is" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"<Anonymous>" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"<Anonymous>" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"exists" ".getMethodsTable" "as" "checkSlotAssignment" "slot<-" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"...elt" "stopifnot" "all.equal.numeric" "all.equal" "isSymmetric.matrix" "isSymmetric" "transMat" "addError" "calcPheno" "setPheno" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rownames<-" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"as.matrix.default" "as.matrix" "unname" "eigen" "transMat" "addError" "calcPheno" "setPheno" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"validObject" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" ".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isColony" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"match.fun" "lapply" "sapply" "...elt" "stopifnot" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"possibleExtends" "validObject" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".getClassesFromCache" "getClassDef" "is" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".getClassesFromCache" "getClassDef" "is" "isColony" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"possibleExtends" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"FUN" "lapply" "do.call" "mergePops" "createDCA" 
".local" "[" "[" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"aperm" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
".identC" "possibleExtends" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"rev" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "[" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"eval" "match.arg" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"is" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"FUN" "vapply" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"checkSexes" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"paste0" "FUN" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
".requirePackage" ".classEnv" "as" "checkSlotAssignment" "slot<-" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "c" "c" "c" 
"possibleExtends" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"possibleExtends" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"vapply" "order" "selectInd" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"lapply" "do.call" "mergePops" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "is" "isPop" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "is" "isPop" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"levels" "Ops.factor" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"<Anonymous>" ".local" "[" "[" "is" "isPop" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"is" "selectInd" "FUN" "lapply" "getFathers" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "selectInd" "FUN" "lapply" "getFathers" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".identC" "<Anonymous>" ".local" "[" "[" "selectInd" "FUN" "lapply" "getFathers" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "FUN" "lapply" "getFathers" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"paste" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"duplicated.matrix" "duplicated" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"<Anonymous>" "isCsdActive" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"array" "asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"length" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"nInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"is" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"strsplit" "lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"toupper" "checkSexes" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"paste" "%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"rownames<-" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"match.arg" "order" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"slot" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"vapply" "order" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"colnames<-" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unique.default" "unique" "simplify2array" "sapply" "reduceDroneHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"is" "isColony" "nCaste" "nQueens" "isQueenPresent" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"eval" "match.arg" "order" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"is" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"array" "asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"isPop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"is" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"character" "getLociNames" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"aperm" "asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"eval" "match.arg" "order" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"duplicated.matrix" "duplicated" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"is" "isPop" "reduceDroneHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"matrix" "convToImat" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"all" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"stopifnot" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"aperm.default" "aperm" "asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"vapply" "order" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"duplicated.matrix" "duplicated" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"paste" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"strsplit" "lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"aperm.default" "aperm" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"get" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"getLociNames" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
".identC" "is" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
".identC" "possibleExtends" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"slot" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"is" "isPop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"possibleExtends" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".identC" "<Anonymous>" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"rownames<-" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"possibleExtends" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getClassDef" "is" "isPop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"is" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"length" "isFALSE" "<Anonymous>" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"is.numeric" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"sys.function" "formals" "match.arg" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"stopifnot" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "is" "isPop" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "selectInd" "FUN" "lapply" "getFathers" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "FUN" "lapply" "getFathers" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"checkSexes" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"paste" "%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".identC" "is" "isPop" "reduceDroneHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"checkSexes" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "is" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"paste" "%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"strsplit" "lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"array" "asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"is" "isColony" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"paste" "%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"is" "isColony" "nCaste" "nQueens" "isQueenPresent" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"vapply" "order" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"paste" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"length" "FUN" "vapply" "order" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"array" "asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"paste0" "FUN" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"all" "stopifnot" "is" "isPop" "reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
".identC" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".identC" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"nInd" "ifelse" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"structure" "object.size" ".rs.describeObject" 
"match.arg" "sink" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueDescriptionImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" ".rs.describeObject" 
"str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "selectColonies" 
"structure" "object.size" ".rs.describeObject" 
"cmpCall" "cmp" "h" "t