sample.interval=20000
"[[" "[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"Ops.data.frame" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"sys.call" "%in%" "[[.data.frame" "[[" "[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"<Anonymous>" "[[.data.frame" "[[" "[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"<Anonymous>" "[[.data.frame" "[[" "rbind" "<Anonymous>" "do.call" "as.matrix" "editCsdLocus" "createCastePop" "createVirginQueens" 
"sample.int" "sample" "[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"Ops.data.frame" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"is.matrix" "<Anonymous>" "[[.data.frame" "[[" "Ops.data.frame" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"[[" "rbind" "<Anonymous>" "do.call" "as.matrix" "editCsdLocus" "createCastePop" "createVirginQueens" 
"%in%" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"modifyList" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"duplicated.default" "duplicated" "setdiff" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"createDH2" "makeDH" "createCastePop" "createDrones" 
"createDH2" "makeDH" "createCastePop" "createDrones" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createCastePop" "createDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "createDrones" 
"createDH2" "makeDH" "createCastePop" "createDrones" 
"getClass" "<Anonymous>" ".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"selectInd" "pullInd" "pullDroneGroupsFromDCA" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
"%in%" "pullInd" "pullDroneGroupsFromDCA" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"pullDroneGroupsFromDCA" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
"!" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"is.list" "eval" "match.arg" "order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
"<Anonymous>" ".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
"[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
"aperm" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"nrow" "matrix" "convToImat" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"levels" "Ops.factor" "isCaste" "isVirginQueen" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "SIMplyBee::cross" 
"as.character" "unique" "factor" "<Anonymous>" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"is.na" "isFALSE" "validObject" "cross" "SIMplyBee::cross" 
"isCaste" "isVirginQueen" "cross" "SIMplyBee::cross" 
"apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"<Anonymous>" ".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"paste" "%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"slot" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"<Anonymous>" ".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "SIMplyBee::cross" 
"stopifnot" "is" "isPop" "setMisc" "cross" "SIMplyBee::cross" 
"rev" "validObject" "cross" "SIMplyBee::cross" 
"try" "validObject" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "SIMplyBee::cross" 
"FUN" "lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"Ops.factor" "isCaste" "isVirginQueen" "cross" "SIMplyBee::cross" 
"setMisc" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"unlist" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "SIMplyBee::cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"is" "isPop" "setMisc" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"asMethod" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
".getMethodsTable" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
".local" "[" "[" "is" "isPop" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "SIMplyBee::cross" 
"getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"strsplit" "lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"tryCatch" "try" "validObject" "cross" "SIMplyBee::cross" 
"parent.frame" "tryCatch" "try" "validObject" "cross" "SIMplyBee::cross" 
"validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "SIMplyBee::cross" 
"levels" "Ops.factor" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "createColony" "createMultiColony" 
"stopifnot" "is" "isColony" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "createColony" "createMultiColony" 
".identC" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
".identC" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"checkSexes" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "createMultiColony" 
"is" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"tryCatchList" "tryCatch" "try" "validObject" "resetEvents" "createColony" "createMultiColony" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".getClassesFromCache" "getClassDef" "validObject" "resetEvents" "createColony" "createMultiColony" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "createMultiColony" 
"@<-" ".local" "[" "[" "createColony" "createMultiColony" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is.matrix" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
".identC" "possibleExtends" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
"isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"getClassDef" "is" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"all" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "createColony" "createMultiColony" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "createColony" "createMultiColony" 
"initialize" "initialize" "new" "createColony" "createMultiColony" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"toupper" "checkSexes" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "resetEvents" "createColony" "createMultiColony" 
"class" ".identC" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "createMultiColony" 
"possibleExtends" "validObject" "resetEvents" "createColony" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"try" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"anyNA" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"isFALSE" "validObject" "resetEvents" "createColony" "createMultiColony" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"class" ".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"levels" "Ops.factor" "isCaste" "isQueen" "createMultiColony" 
"is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
"isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"getClassDef" "possibleExtends" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"try" "validObject" "resetEvents" "createColony" "createMultiColony" 
"%in%" "simplify2array" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"all" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"as" "initialize" "initialize" "new" "createColony" "createMultiColony" 
".getClassesFromCache" "getClassDef" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".identC" "is" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "createColony" "createMultiColony" 
"validObject" "createColony" "createMultiColony" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "createMultiColony" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "createColony" "createMultiColony" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"asMethod" "as" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"getClassDef" "validObject" "resetEvents" "createColony" "createMultiColony" 
".identC" "as" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "createColony" "createMultiColony" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"stopifnot" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".getClassesFromCache" "getClassDef" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getClassDef" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"validObject" "initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"eval" "match.arg" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"apply" "isGenoHeterozygous" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".getClassesFromCache" "getClassDef" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"all" "stopifnot" "is" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGeno" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "buildUp" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "buildUp" "buildUp" 
"is" "isPop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"stopifnot" "is" "isPop" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isMapPop" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"stopifnot" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"validObject" "buildUp" "buildUp" 
"character" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"addCastePop" "addWorkers" "buildUp" "buildUp" 
"slot" "asMethod" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGeno" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"stopifnot" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"possibleExtends" "validObject" "buildUp" "buildUp" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"exists" ".getMethodsTable" "as" "checkSlotAssignment" "slot<-" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"anyNA" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getClassDef" "validObject" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"$" "isCsdActive" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is.function" "validObject" "buildUp" "buildUp" 
"validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".identC" "is" ".findMethodInTable" ".quickCoerceSelect" "as" "checkSlotAssignment" "slot<-" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getClassDef" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"stopifnot" "is" "isPop" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"all" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is" "isMultiColony" "isQueenPresent" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"match.fun" "lapply" "sapply" "...elt" "stopifnot" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"try" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"isFALSE" "<Anonymous>" ".local" "[" "[" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".identC" "is" "isMultiColony" "isQueenPresent" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"grepl" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".identC" "possibleExtends" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "buildUp" "buildUp" 
"as" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is.list" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"[[<-" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getClassDef" "possibleExtends" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is.list" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"stopifnot" "is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "buildUp" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "is" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"stopifnot" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "possibleExtends" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"all" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"...elt" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"isColony" "hasCollapsed" "addCastePop" "addDrones" "buildUp" "buildUp" 
"stopifnot" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"stopifnot" "is" "isColony" "hasCollapsed" "buildUp" "buildUp" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "is" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"rev" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getClassDef" "possibleExtends" "validObject" "buildUp" "buildUp" 
"sys.function" "formals" "match.arg" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"eval" "match.arg" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"possibleExtends" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "buildUp" "buildUp" 
"getResponse" "selectInd" "getCastePop" "getQueen" "nInd" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "buildUp" "buildUp" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"<Anonymous>" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"apply" "isGenoHeterozygous" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"parent.frame" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"as" "checkSlotAssignment" "slot<-" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" ".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".getGeneric" "getGeneric" "as" "checkSlotAssignment" "slot<-" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"eval" "match.arg" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"anyNA" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"isColony" "nCaste" "nQueens" "isQueenPresent" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getClassDef" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isColony" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"isFALSE" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "is" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"as" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"stopifnot" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isMultiColony" "isQueenPresent" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isColony" "nCaste" "nQueens" "isQueenPresent" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"nCaste" "nQueens" "isQueenPresent" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getClassDef" "is" "isColony" "hasCollapsed" "addCastePop" "addDrones" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"checkSexes" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isPop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"possibleExtends" "validObject" "initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"checkSexes" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "createColony" "split" "split" 
"is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"initialize" "new" "createColony" "split" "split" 
"rev.default" "rev" "validObject" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"lapply" "sapply" "...elt" "stopifnot" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "createColony" "split" "split" 
".identC" "possibleExtends" "validObject" "resetEvents" "createColony" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"attributes" "validObject" "initialize" "initialize" "new" "createColony" "split" "split" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"possibleExtends" "checkSlotAssignment" "slot<-" "pullCastePop" "pullWorkers" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "createColony" "split" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"unique" "factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "pullInd" "pullCastePop" "pullWorkers" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"tryCatch" "try" "validObject" "resetEvents" "createColony" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isPop" "createCastePop" "createVirginQueens" "split" "split" 
"...elt" "stopifnot" "is" "isMultiColony" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"class" ".identC" "possibleExtends" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"slot" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"<Anonymous>" "matrix" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".identC" "<Anonymous>" ".local" "[" "[" "pullInd" "pullCastePop" "pullWorkers" "split" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is.list" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"getResponse" "selectInd" "getCastePop" "getQueen" "nInd" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"getClassDef" "validObject" "split" "split" 
"createCastePop" "createVirginQueens" "split" "split" 
"...elt" "stopifnot" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getClassDef" "is" "isColony" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"validObject" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"anyNA" "stopifnot" "is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
".identC" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isColony" "isQueenPresent" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"Ops.factor" "isCaste" "isQueen" "createColony" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
".classEnv" "as" "initialize" "initialize" "new" "createColony" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
".identC" "possibleExtends" "validObject" "createColony" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"[[<-" "split" 
".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "pullInd" "pullCastePop" "pullWorkers" "split" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
".identC" "<Anonymous>" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"levels" "Ops.factor" "isCaste" "isQueen" "createColony" "split" "split" 
"is" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "createColony" "split" "split" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "createColony" "split" "split" 
"rnorm" "getResponse" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"validObject" "setLocation" "split" "split" 
"stopifnot" "is" "isPop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "split" "split" 
"all" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"tryCatch" "try" "validObject" "resetEvents" "createColony" "split" "split" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
".identC" "possibleExtends" "validObject" "initialize" "initialize" "new" "createColony" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
".local" "[[<-" "[[<-" "split" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"colnames<-" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"validObject" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
".local" "[" "[" "selectInd" "pullInd" "pullCastePop" "pullWorkers" "split" "split" 
"validObject" "createColony" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"tryCatchList" "tryCatch" "try" "validObject" "setLocation" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"getClass" "<Anonymous>" ".local" "[" "[" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"length" "ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"@<-" ".local" "[" "[" "pullInd" "pullCastePop" "pullWorkers" "split" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"length" "ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"all" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"getGeno" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"anyNA" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "createColony" "split" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "setLocation" "split" "split" 
"tryCatch" "try" "validObject" ".local" "[[<-" "[[<-" "split" 
"isFALSE" "sapply" "...elt" "stopifnot" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"names" "tryCatch" "try" "validObject" "setLocation" "split" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "createColony" "split" "split" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is.na" "ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"stopifnot" "is" "isColony" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"tryCatch" "try" "validObject" "resetEvents" "createColony" "split" "split" 
"...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
".getClassesFromCache" "getClassDef" "getClass" "new" "createColony" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is.na" "ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"slot<-" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"slot" "ifelse" "nCaste" "nQueens" "isQueenPresent" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"aperm" "apply" "isGenoHeterozygous" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"tryCatch" "try" "validObject" "initialize" "initialize" "new" "createColony" "split" "split" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "createColony" "split" "split" 
"ifelse" "nCaste" "nWorkers" "isWorkersPresent" "split" "split" 
"is" "isColony" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"validObject" "setLocation" "split" "split" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"anyDuplicated" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"tryCatchList" "tryCatch" "try" "validObject" "resetEvents" "createColony" "split" "split" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"$" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"getClassDef" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"unlist" "apply" "isGenoHeterozygous" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"validObject" "createColony" "split" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"length" "...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"anyNA" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isColony" "getCastePop" "getQueen" "nInd" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "createColony" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"all" "stopifnot" "is" "isMultiColony" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "resetEvents" "createColony" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "split" "split" 
"asMethod" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"stopifnot" "is" ".findMethodInTable" ".quickCoerceSelect" "as" "checkSlotAssignment" "slot<-" "pullCastePop" "pullWorkers" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "createColony" "split" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
".identC" "possibleExtends" "validObject" "createColony" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"character" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"<Anonymous>" "split" "split" 
"...elt" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"sum" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"tryCatchList" "tryCatch" "try" "validObject" "setLocation" "split" "split" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "resetEvents" "createColony" "split" "split" 
"validObject" "createColony" "split" "split" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "createColony" "split" "split" 
"validObject" "resetEvents" "createColony" "split" "split" 
".getGeneric" "getGeneric" "as" "initialize" "initialize" "new" "createColony" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"character" "validObject" ".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"rev" "validObject" "reQueen" "reQueen" 
"all" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"[[" "[[" "is" "isColony" "reQueen" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
"tryCatchList" "tryCatch" "try" "validObject" "reQueen" "reQueen" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "reQueen" "reQueen" 
"tryCatch" "try" "validObject" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"levels" "Ops.factor" "isCaste" "isQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
"stopifnot" "is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"@<-" ".local" "[" "[" "is" "isPop" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"c" "factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isPop" "isCaste" "isQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isMultiColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
"validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"stopifnot" "is" ".findMethodInTable" ".quickCoerceSelect" "as" "checkSlotAssignment" "slot<-" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "is" "isPop" "reQueen" "reQueen" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "is" "isPop" "reQueen" "reQueen" 
"...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"class" ".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"isS4" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"all" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "reQueen" 
"getClassDef" "is" "isMultiColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "reQueen" 
"class" ".identC" "possibleExtends" "validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "is" "isPop" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"is" "isColony" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"tryCatch" "try" "validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"anyNA" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"[[<-" "[[<-" "reQueen" 
"nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"is.na" "ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"validObject" "reQueen" "reQueen" 
"is" "isMultiColony" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
".identC" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"class" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"all" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
".identC" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"message" "pullColonies" 
"checkSexes" "selectInd" "pullInd" "pullCastePop" "pullWorkers" "swarm" "swarm" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "swarm" "swarm" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getDrones" "swarm" "swarm" 
"tryCatch" "try" "validObject" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"<Anonymous>" "initialize" "initialize" "new" "createColony" "swarm" "swarm" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "resetEvents" "createColony" "swarm" "swarm" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getDrones" "swarm" "swarm" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getDrones" "swarm" "swarm" 
"getClassDef" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "createColony" "swarm" "swarm" 
".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
".getClassesFromCache" "getClassDef" "validObject" ".local" "[[" "[[" "is" "isColony" "swarm" "swarm" 
"validObject" "createColony" "swarm" "swarm" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"getClassDef" "is" "c" "c" "c" 
"all" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "pullColonies" 
"validObject" ".local" "[[" "[[" "is" "isColony" "supersede" "supersede" 
"simParamBee$changeCaste" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"simParamBee$changeCaste" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"simParamBee$changeCaste" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"validObject" "supersede" "supersede" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
".identC" "possibleExtends" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".identC" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"stopifnot" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".identC" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"getResponse" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"...length" "stopifnot" "mergePops" "createDCA" 
"mergeMultGeno" "mergePops" "createDCA" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"!" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"<Anonymous>" ".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"<Anonymous>" "checkSexes" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"validObject" "cross" "cross" "cross" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"eval" "match.arg" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "cross" "cross" 
"tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isPop" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"getClass" "<Anonymous>" "cross" "cross" "cross" 
"tryCatch" "try" "validObject" "cross" "cross" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"checkSlotAssignment" "slot<-" "asMethod" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "cross" "cross" 
"pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "cross" "cross" 
"getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"stopifnot" "is" "isMultiColony" "isVirginQueensPresent" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"aperm" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"try" "validObject" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"rev.default" "rev" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "cross" "cross" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"@<-" "setMisc" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"levels" "Ops.factor" "isCaste" "isDrone" "cross" "cross" "cross" 
"cross" "cross" "cross" 
"stopifnot" "is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isPop" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"is" ".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "cross" "cross" 
"Ops.factor" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"slot" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"is" "isPop" "reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"unique" "simplify2array" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"class" "is" "isPop" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"as" "checkSlotAssignment" "slot<-" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"anyNA" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"isS4" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"vapply" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"tolower" "getResponse" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
".getClassesFromCache" "getClassDef" "is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"isS4" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"is.na" "ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"lengths" "unique" "simplify2array" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"is.list" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
".identC" "is" "isColony" "reQueen" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unique" "factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"validObject" "cross" "cross" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"environment" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
".getClassesFromCache" "getClassDef" "possibleExtends" "validObject" "cross" "cross" 
".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"all" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"tryCatch" "try" "validObject" "cross" "cross" "cross" 
"validObject" "cross" "cross" "cross" 
"is" "isMultiColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isPop" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"...elt" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "cross" "cross" "cross" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"all" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"strsplit" "lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"tryCatch" "try" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
".local" "[" "[" "selectInd" "cross" "cross" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "cross" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"stopifnot" "is" "isMultiColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isPop" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"slot<-" "asMethod" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "cross" "cross" 
"stopifnot" "is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
".local" "[" "[" "selectInd" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"as.character" "unique" "factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"all" "stopifnot" "is" "isColony" "isQueenPresent" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"getClassDef" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"isCaste" "isVirginQueen" "cross" "cross" "cross" 
"possibleExtends" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"anyNA" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"try" "validObject" "cross" "cross" 
"validObject" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"all" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"stopifnot" "is" "selectInd" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" 
"tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "getCastePop" "getDrones" "createDCA" 
"<Anonymous>" ".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"stopifnot" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"<Anonymous>" ".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"tryCatch" "try" "validObject" "reQueen" "cross" "cross" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is" "isPop" "reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"tryCatch" "try" "validObject" "cross" "cross" 
"cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"validObject" "cross" "cross" "cross" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "cross" "cross" "cross" 
"order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
".requirePackage" ".classEnv" "validObject" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"environment" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isPop" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"ifelse" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"cross" "cross" "cross" 
"@<-" "setMisc" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"validObject" ".local" "[[" "[[" "is" "isPop" "cross" "cross" 
"sys.function" "formals" "match.arg" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"invisible" "stopifnot" "is" "isPop" "isCaste" "isQueen" "cross" "cross" 
"$" "cross" "cross" "cross" 
"is.data.frame" "rownames<-" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"tryCatchList" "tryCatch" "try" "validObject" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"asMethod" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"getClassDef" "validObject" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"stopifnot" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"unique" "factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"force" "factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"<Anonymous>" ".local" "[" "[" "selectInd" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "cross" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "cross" "cross" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"lapply" "unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"anyNA" "stopifnot" "is" "isPop" "reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
":" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
".local" "[" "[" "selectInd" "cross" "cross" 
"isColony" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "cross" "cross" 
"tryCatch" "try" "validObject" "cross" "cross" "cross" 
"getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"setMisc" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "selectColonies" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "pullColonies" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "pullColonies" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "swarm" "swarm" 
"@<-" ".local" "[" "[" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"attributes" "factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "swarm" "swarm" 
"force" "factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getDrones" "swarm" "swarm" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "pullColonies" 
"order" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"ifelse" "nCaste" "nQueens" "isQueenPresent" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"simParamBee$changeCaste" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"stopifnot" "is" "isPop" "isCsdHeterozygous" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
".getClassesFromCache" "getClassDef" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getClassDef" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"validObject" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isPop" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getClassDef" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isColony" "isQueenPresent" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"sys.parent" "sys.function" "formals" "match.arg" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isMultiColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".getGeneric" "getGeneric" "as" "checkSlotAssignment" "slot<-" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getClassDef" "getClass" "new" "asMethod" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getClassDef" "is" "isMultiColony" "isQueenPresent" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" ".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"checkSexes" "selectInd" "getCastePop" "getQueen" "is" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isColony" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
".identC" "possibleExtends" "validObject" ".local" "[[" "[[" "is" "isColony" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".identC" "possibleExtends" "validObject" ".local" "[[" "[[" "is" "isColony" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"...elt" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"possibleExtends" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "is" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"all" "stopifnot" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"validObject" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"tryCatch" "try" "validObject" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"possibleExtends" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"[[" "is" "isColony" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".identC" "possibleExtends" "validObject" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"as" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"ifelse" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"slot" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getClassDef" "possibleExtends" "checkSlotAssignment" "slot<-" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is.list" "getClassDef" "getClass" "<Anonymous>" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"slot<-" "asMethod" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"is.na" "ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"duplicated.default" "duplicated" "validityMethod" "isTRUE" "anyStrings" "validObject" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"unique" "factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
".requirePackage" ".classEnv" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rev" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isColony" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" ".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"isFALSE" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"all" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getQueen" "is" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".getClassesFromCache" "getClassDef" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getClassDef" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"<Anonymous>" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".identC" "possibleExtends" "validObject" ".local" "[[" "[[" "is" "isColony" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"grepl" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"validObject" ".local" "[[" "[[" "is" "isColony" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"stopifnot" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"getClassDef" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"getClassDef" "possibleExtends" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"$" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"c" "do.call" "mergePops" "createDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
".getClassesFromCache" "getClassDef" "is" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"order" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"is" "isColony" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"parent.frame" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"is.list" "getClassDef" "is" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "cross" "cross" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
".getClassesFromCache" "getClassDef" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"stopifnot" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"tolower" "getResponse" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"structure" "object.size" ".rs.describeObject" 
"strsplit" "prettyNum" "format.default" "format" "format.fun" "paste" "nchar.w" "maybe_truncate" "formObj" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"vapply" "%in%" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"match.call" "as.vector" "setdiff" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"FUN" "lapply" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"eval" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"%in%" "modifyList" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"as.call" "FUN" "lapply" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"duplicated" "setdiff" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"sys.parent" "sys.function" "formals" "match.arg" "prettyNum" "format.default" "format" "format.fun" "paste" "nchar.w" "maybe_truncate" "formObj" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"stopifnot" "modifyList" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"setdiff" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"ifelse" "paste0" "arrLenstr" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"isS4" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"as.character" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"paste" "paste0" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"tryCatch" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"modifyList" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"paste" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"lapply" "sapply" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "trygetSlots" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"eval" "FUN" "lapply" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"lapply" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"as.call" "FUN" "lapply" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"duplicated" "setdiff" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"%in%" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "selectColonies" 
"structure" "object.size" ".rs.describeObject" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "c" "c" "c" 
"structure" "object.size" ".rs.describeObject" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "selectColonies" 
"structure" "object.size" ".rs.describeObject" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"basename" "sort" ".rs.getCompletionsPackages" "Reduce" ".rs.rpc.get_completions" 
"FUN" "lapply" "sapply" "isEmpty" "nEmptyColonies" "cat" "<Anonymous>" "<Anonymous>" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "isEmpty" "<Anonymous>" "<Anonymous>" 
"isS4" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "is" "isColony" "hasSplit" "cat" "<Anonymous>" "<Anonymous>" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "is" "isColony" "hasSuperseded" "cat" "<Anonymous>" "<Anonymous>" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "hasCollapsed" "cat" "<Anonymous>" "<Anonymous>" 
"FUN" "lapply" "sapply" "isEmpty" "nEmptyColonies" "cat" "<Anonymous>" "<Anonymous>" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "hasSuperseded" "cat" "<Anonymous>" "<Anonymous>" 
"FUN" "lapply" "sapply" "isEmpty" "nEmptyColonies" "cat" "<Anonymous>" "<Anonymous>" 
"isColony" "FUN" "lapply" "sapply" "hasSuperseded" "cat" "<Anonymous>" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"isEmpty" "FUN" "lapply" "sapply" "isEmpty" "<Anonymous>" "<Anonymous>" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[" "[" "is" "isColony" "hasSuperseded" "cat" "<Anonymous>" "<Anonymous>" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "isNULLColonies" "<Anonymous>" "<Anonymous>" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "isEmpty" "nEmptyColonies" "cat" "<Anonymous>" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
".Call" ".rs.getNAMESPACEImportedSymbols" ".rs.getCompletionsNAMESPACE" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"readRDS" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"readRDS" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"readRDS" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"readRDS" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"readRDS" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"strsplit" "lapply" "f" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"FUN" "lapply" "f" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"FUN" "lapply" "f" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"grepl" "FUN" "lapply" "f" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"grepl" "FUN" "lapply" "f" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"grepl" "FUN" "lapply" "f" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"grepl" "FUN" "lapply" "f" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"lapply" "f" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"grepl" "FUN" "lapply" "f" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"grepl" "FUN" "lapply" "f" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"strsplit" "lapply" ".make_numeric_version" "numeric_version" "as.numeric_version" "Ops.numeric_version" ">=" "do.call" "f" "available.packages" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"sprintf" "FUN" "lapply" ".encode_nu