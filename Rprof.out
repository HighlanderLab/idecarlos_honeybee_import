sample.interval=20000
"load" 
"load" 
"sample.int" "sample" "array" "quickHaplo" 
"paste" "quickHaplo" 
"sample.int" "sample" "array" "quickHaplo" 
"$" "conditionCall.condition" "conditionCall" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueAsStringImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" ".rs.describeObject" 
"stopifnot" "modifyList" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueDescriptionImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" ".rs.describeObject" 
"calcGenParam" "SP$addTraitA" 
"calcGenParam" "SP$addTraitA" 
"getClass" "initialize" "initialize" "new" "SP$addTraitA" 
"calcGenParam" "SP$addTraitA" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"deparse" "mode" "%in%" "deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
".deparseOpts" "deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
".local" "[" "[" "is" "isMapPop" "createCastePop" "createVirginQueens" 
"initialize" "initialize" "new" ".newPop" "newPop" "createCastePop" "createVirginQueens" 
"[[.data.frame" "[[" "[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"sys.call" "%in%" "[[.data.frame" "[[" "[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"[[.data.frame" "[[" "[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"%in%" "Ops.data.frame" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"names" "names" "Ops.data.frame" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"Ops.data.frame" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"Ops.data.frame" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"Ops.data.frame" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"%in%" "[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"is.matrix" "<Anonymous>" "[[.data.frame" "[[" "Ops.data.frame" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"anyDuplicated" "[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"[[" "[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"<Anonymous>" "[[.data.frame" "[[" "Ops.data.frame" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"[[.data.frame" "[[" "Ops.data.frame" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"names" "%in%" "[[.data.frame" "[[" "Ops.data.frame" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"[[" "Ops.data.frame" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"Make.row.names" "rbind" "<Anonymous>" "do.call" "as.matrix" "editCsdLocus" "createCastePop" "createVirginQueens" 
"sys.call" "%in%" "[[.data.frame" "[[" "rbind" "<Anonymous>" "do.call" "as.matrix" "editCsdLocus" "createCastePop" "createVirginQueens" 
"[[" "rbind" "<Anonymous>" "do.call" "as.matrix" "editCsdLocus" "createCastePop" "createVirginQueens" 
"setHaplo" "setMarkerHaplo" "editCsdLocus" "createCastePop" "createVirginQueens" 
"getGv" ".newPop" "newPop" "createCastePop" "createVirginQueens" 
"stopifnot" "sample.int" "sample" "[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"[[.data.frame" "[[" "[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"%in%" "[[.data.frame" "[[" "[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"anyDuplicated" "[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"[[.data.frame" "[[" "[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"length" "Ops.data.frame" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"names" "%in%" "[[.data.frame" "[[" "Ops.data.frame" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"<Anonymous>" "[[.data.frame" "[[" "[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"sys.call" "%in%" "[[.data.frame" "[[" "[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"[[.data.frame" "[[" "Ops.data.frame" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"%in%" "[[.data.frame" "[[" "Ops.data.frame" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"%in%" "[[.data.frame" "[[" "Ops.data.frame" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"length" "length" "[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"[.data.frame" "[" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"list" "matrix" "Ops.data.frame" "FUN" "lapply" "sapply" "editCsdLocus" "createCastePop" "createVirginQueens" 
"[[" "rbind" "<Anonymous>" "do.call" "as.matrix" "editCsdLocus" "createCastePop" "createVirginQueens" 
".subset2" "<Anonymous>" "[[.data.frame" "[[" "rbind" "<Anonymous>" "do.call" "as.matrix" "editCsdLocus" "createCastePop" "createVirginQueens" 
"resetPop" "setMarkerHaplo" "editCsdLocus" "createCastePop" "createVirginQueens" 
"createDH2" "makeDH" "createCastePop" "createDrones" 
"createDH2" "makeDH" "createCastePop" "createDrones" 
"createDH2" "makeDH" "createCastePop" "createDrones" 
"createDH2" "makeDH" "createCastePop" "createDrones" 
"createDH2" "makeDH" "createCastePop" "createDrones" 
"createDH2" "makeDH" "createCastePop" "createDrones" 
"createDH2" "makeDH" "createCastePop" "createDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "createDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "createDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "createDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "createDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "createDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "createDrones" 
"createDH2" "makeDH" "createCastePop" "createDrones" 
"createDH2" "makeDH" "createCastePop" "createDrones" 
"createDH2" "makeDH" "createCastePop" "createDrones" 
"createDH2" "makeDH" "createCastePop" "createDrones" 
"createDH2" "makeDH" "createCastePop" "createDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "createDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "createDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "createDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "createDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "createDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "createDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "[" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"abs" ".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"FUN" "vapply" "order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"@<-" ".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"stopifnot" "is" "isPop" "pullInd" "pullDroneGroupsFromDCA" 
"stopifnot" "is" "isPop" "pullInd" "pullDroneGroupsFromDCA" 
"stopifnot" "is" "isPop" "pullInd" "pullDroneGroupsFromDCA" 
"stopifnot" "is" "isPop" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"stopifnot" "is" "isPop" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"<Anonymous>" ".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"stopifnot" "is" "isPop" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"stopifnot" "is" "isPop" "pullInd" "pullDroneGroupsFromDCA" 
"stopifnot" "is" "isPop" "pullInd" "pullDroneGroupsFromDCA" 
"stopifnot" "is" "isPop" "pullInd" "pullDroneGroupsFromDCA" 
"stopifnot" "is" "isPop" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".identC" "<Anonymous>" ".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"@<-" ".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"@<-" ".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"<Anonymous>" ".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"any" ".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"<Anonymous>" ".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"sys.parent" "sys.function" "formals" "match.arg" "order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
"<Anonymous>" ".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" 
".local" "[" "[" "is" "isPop" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"convToImat" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
".local" "[" "[" "is" "isPop" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"getClassDef" "is" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"<Anonymous>" "setMisc" "cross" "SIMplyBee::cross" 
"parent.frame" "tryCatch" "try" "validObject" "cross" "SIMplyBee::cross" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"<Anonymous>" ".local" "[" "[" "is" "isPop" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"validObject" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"slot" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "is" "isPop" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
".identC" "<Anonymous>" ".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"getClass" "checkSlotAssignment" "slot<-" "asMethod" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"validObject" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"isCsdActive" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"is" "isPop" "setMisc" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"try" "validObject" "cross" "SIMplyBee::cross" 
"$" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"<Anonymous>" "paste" "%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"character" "validObject" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"is" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"isFALSE" "validObject" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "SIMplyBee::cross" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"stopifnot" "is" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"setMisc" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"try" "validObject" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"initialize" "initialize" "new" "asMethod" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "SIMplyBee::cross" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
".identC" "possibleExtends" "validObject" "cross" "SIMplyBee::cross" 
"cross" "SIMplyBee::cross" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"@<-" "setMisc" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
".local" "[" "[" "is" "isPop" "cross" "SIMplyBee::cross" 
"tryCatch" "try" "validObject" "cross" "SIMplyBee::cross" 
"getNamespace" ".requirePackage" ".classEnv" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "SIMplyBee::cross" 
"is" "isPop" "setMisc" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
".getClassesFromCache" "getClassDef" "is" "isPop" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
".identC" "possibleExtends" "validObject" "cross" "SIMplyBee::cross" 
".local" "[" "[" "is" "isPop" "cross" "SIMplyBee::cross" 
".local" "[" "[" "is" "isPop" "cross" "SIMplyBee::cross" 
".local" "[" "[" "is" "isPop" "cross" "SIMplyBee::cross" 
".local" "[" "[" "is" "isPop" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"stopifnot" "is" "isPop" "setMisc" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"validObject" "cross" "SIMplyBee::cross" 
"tryCatchList" "tryCatch" "try" "validObject" "cross" "SIMplyBee::cross" 
"tryCatchList" "tryCatch" "try" "validObject" "cross" "SIMplyBee::cross" 
"attributes" "validObject" "cross" "SIMplyBee::cross" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"@<-" ".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"...elt" "stopifnot" "is" "isPop" "setMisc" "cross" "SIMplyBee::cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"stopifnot" "is" "isPop" "setMisc" "cross" "SIMplyBee::cross" 
"try" "validObject" "cross" "SIMplyBee::cross" 
".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "SIMplyBee::cross" 
".classEnv" "validObject" "cross" "SIMplyBee::cross" 
"$" "paste" "%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"stopifnot" "is" "isPop" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"paste" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"isCaste" "isQueen" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
".local" "[" "[" "is" "isPop" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"asMethod" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"convToImat" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
".identC" "<Anonymous>" ".local" "[" "[" "is" "isPop" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "cross" "SIMplyBee::cross" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"stopifnot" "is" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"simParamBee$changeCaste" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"@<-" ".local" "[" "[" "is" "isPop" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"initialize" "new" "asMethod" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"is" ".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "SIMplyBee::cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"paste0" "FUN" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "SIMplyBee::cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "SIMplyBee::cross" 
".identC" "possibleExtends" "validObject" "initialize" "initialize" "new" "mergePops" "c" "c" "c" 
"getGeno" "pullSegSiteGeno" "getSegSiteGeno" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"apply" "calcBeeAlleleFreq" 
"apply" "calcBeeAlleleFreq" 
"as.integer" "matrix" "convToImat" "pullSegSiteGeno" "getSegSiteGeno" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"apply" "calcBeeAlleleFreq" 
"apply" "calcBeeAlleleFreq" 
"apply" "calcBeeAlleleFreq" 
"apply" "calcBeeAlleleFreq" 
"unique" "simplify2array" "sapply" "unlist" "pullSegSiteGeno" "getSegSiteGeno" "calcBeeAlleleFreq" 
"as.integer" "matrix" "convToImat" "pullSegSiteGeno" "getSegSiteGeno" "calcBeeAlleleFreq" 
"aperm.default" "aperm" "apply" "calcBeeAlleleFreq" 
"apply" "calcBeeAlleleFreq" 
"apply" "calcBeeAlleleFreq" 
"stopifnot" "is" "isPop" "isCaste" "isQueen" "createColony" "createMultiColony" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"getClass" "<Anonymous>" ".local" "[" "[" "createColony" "createMultiColony" 
"is" "isPop" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".local" "[" "[" "createColony" "createMultiColony" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
"<Anonymous>" ".local" "[" "[" "createColony" "createMultiColony" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "createMultiColony" 
"@<-" ".local" "[" "[" "createColony" "createMultiColony" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"getClassDef" "validObject" "resetEvents" "createColony" "createMultiColony" 
"getClassDef" "possibleExtends" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".identC" "possibleExtends" "validObject" "createColony" "createMultiColony" 
"tryCatchList" "tryCatch" "try" "validObject" "createColony" "createMultiColony" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".local" "[[<-" "[[<-" "createMultiColony" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"length" "ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"getClassDef" "possibleExtends" "<Anonymous>" "resetEvents" "createColony" "createMultiColony" 
"%in%" ".getGeneric" "getGeneric" "as" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"is.list" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
"FUN" "vapply" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "createMultiColony" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "createMultiColony" 
"initialize" "initialize" "new" "createColony" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"validObject" "createColony" "createMultiColony" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "createColony" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"possibleExtends" "validObject" "createColony" "createMultiColony" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "resetEvents" "createColony" "createMultiColony" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"initialize" "initialize" "new" "createColony" "createMultiColony" 
"tryCatch" "try" "validObject" "resetEvents" "createColony" "createMultiColony" 
".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"rev" "validObject" "createColony" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "createColony" "createMultiColony" 
"anyDuplicated" "initialize" "initialize" "new" "createColony" "createMultiColony" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".getClassesFromCache" "getClassDef" "is" ".findMethodInTable" ".quickCoerceSelect" "as" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"tryCatch" "try" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "resetEvents" "createColony" "createMultiColony" 
"selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
".findMethodInTable" ".quickCoerceSelect" "as" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"$" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"stopifnot" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
"is" "isColony" "resetEvents" "createColony" "createMultiColony" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"isCaste" "isQueen" "createColony" "createMultiColony" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "createColony" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "createMultiColony" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "createColony" "createMultiColony" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "createMultiColony" 
"is.list" "getClassDef" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"isCaste" "isQueen" "createColony" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"...elt" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"anyNA" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "createColony" "createMultiColony" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".identC" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"all" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "resetEvents" "createColony" "createMultiColony" 
"all" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"all" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
".classEnv" "validObject" "resetEvents" "createColony" "createMultiColony" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "createMultiColony" 
"createMultiColony" 
"validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"possibleExtends" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"possibleExtends" "<Anonymous>" "resetEvents" "createColony" "createMultiColony" 
"tryCatch" "try" "validObject" "createColony" "createMultiColony" 
"possibleExtends" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"is" ".findMethodInTable" ".quickCoerceSelect" "as" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"isFALSE" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
".getClassesFromCache" "getClassDef" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"tryCatchList" "tryCatch" "try" "validObject" "resetEvents" "createColony" "createMultiColony" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "createColony" "createMultiColony" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".identC" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".local" "[" "[" "createColony" "createMultiColony" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "createMultiColony" 
"class" ".identC" "is" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
".identC" "possibleExtends" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"class" ".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".getClassesFromCache" "getClassDef" "initialize" "initialize" "new" "createColony" "createMultiColony" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
"...elt" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"environment" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "createColony" "createMultiColony" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".classEnv" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"stopifnot" "is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "createColony" "createMultiColony" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".findMethodInTable" ".quickCoerceSelect" "as" "initialize" "initialize" "new" "createColony" "createMultiColony" 
".getClassesFromCache" "getClassDef" "validObject" "createColony" "createMultiColony" 
".identC" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"getClassDef" "possibleExtends" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "createColony" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isColony" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"stopifnot" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"length" "...elt" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
"isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "createColony" "createMultiColony" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
"getNamespace" ".requirePackage" ".classEnv" "validObject" "resetEvents" "createColony" "createMultiColony" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "createColony" "createMultiColony" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".identC" "possibleExtends" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "createColony" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "createMultiColony" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "createMultiColony" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"initialize" "initialize" "new" "createColony" "createMultiColony" 
"tryCatch" "try" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"stopifnot" "is" "isPop" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"rev" "validObject" "resetEvents" "createColony" "createMultiColony" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "createMultiColony" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "createMultiColony" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "createMultiColony" 
"is" "isColony" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"attributes" "ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "createMultiColony" 
"vapply" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "createColony" "createMultiColony" 
"is.list" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "createColony" "createMultiColony" 
"possibleExtends" "validObject" "createColony" "createMultiColony" 
"tryCatch" "try" "validObject" "resetEvents" "createColony" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "createColony" "createMultiColony" 
"slot" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "createColony" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"tryCatch" "try" "validObject" "resetEvents" "createColony" "createMultiColony" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "createMultiColony" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"<Anonymous>" "getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"rev" "validObject" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"rnorm" "getResponse" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"@<-" ".local" "[" "[" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "is" "isMultiColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"is" "isMultiColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "buildUp" "buildUp" 
"checkSexes" "selectInd" "getCastePop" "getQueen" "is" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"slot<-" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".identC" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"<Anonymous>" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "validObject" "initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"<Anonymous>" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"buildUp" 
".hasSlot" "calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"[" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isColony" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".local" "[[<-" "[[<-" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".getClassesFromCache" "getClassDef" "initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isMultiColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".getGeneric" "getGeneric" "as" "checkSlotAssignment" "slot<-" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".findMethodInTable" ".quickCoerceSelect" "as" "checkSlotAssignment" "slot<-" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "is" "isColony" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"$" "createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".identC" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"validObject" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"all" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"length" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"<Anonymous>" ".local" "[" "[" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"paste" "%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"rev" "validObject" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"anyNA" "stopifnot" "is" "isPop" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".getGeneric" "getGeneric" "as" "checkSlotAssignment" "slot<-" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"character" "validObject" "initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is.function" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"na.omit" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"initialize" "new" "asMethod" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rnorm" "getResponse" "selectInd" "getCastePop" "getQueen" "is" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"stopifnot" "is" "isMultiColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"eval" "match.arg" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"class" ".identC" "is" "isMapPop" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"stopifnot" "is" "isColony" "getCastePop" "getQueen" "is" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isColony" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"character" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"tryCatch" "try" "validObject" "initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".local" "[" "[" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"anyNA" "stopifnot" "selectInd" "getCastePop" "getQueen" "nInd" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"addError" "calcPheno" "setPheno" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGeno" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".identC" "is" ".findMethodInTable" ".quickCoerceSelect" "as" "checkSlotAssignment" "slot<-" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"...elt" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"anyDuplicated" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"integer" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"calcPheno" "setPheno" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".requirePackage" ".classEnv" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"length" ".class1" "as" "checkSlotAssignment" "slot<-" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"isFALSE" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"possibleExtends" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"isQueenPresent" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"<Anonymous>" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"<Anonymous>" ".local" "[[<-" "[[<-" "buildUp" 
".identC" "possibleExtends" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is.na" "ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"stopifnot" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".identC" "checkSlotAssignment" "slot<-" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"lapply" "unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"validObject" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".identC" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"<Anonymous>" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"names" "allNames" "initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"tryCatchList" "tryCatch" "try" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".local" "[" "[" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"sapply" "...elt" "stopifnot" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".identC" "possibleExtends" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".identC" "possibleExtends" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"try" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"paste" "%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"possibleExtends" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"as" "checkSlotAssignment" "slot<-" "addCastePop" "addDrones" "buildUp" "buildUp" 
"vapply" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"tryCatch" "try" "validObject" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".identC" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"colnames<-" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "possibleExtends" "<Anonymous>" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".local" "[" "[" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isMultiColony" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"$" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"length" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"<Anonymous>" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"invisible" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"<Anonymous>" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".requirePackage" ".classEnv" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"isPop" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"[" "selectInd" "getCastePop" "getQueen" "is" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isColony" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"all" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".getGeneric" "getGeneric" "as" "checkSlotAssignment" "slot<-" "addCastePop" "addDrones" "buildUp" "buildUp" 
".identC" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"possibleExtends" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"...elt" "stopifnot" "is" "isColony" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "buildUp" "buildUp" 
"colnames<-" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"as.character" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"slot<-" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"checkSexes" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".identC" "possibleExtends" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"isS4" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"names" "tryCatch" "try" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"sys.frame" "eval" "match.arg" "order" "selectInd" "getCastePop" "getQueen" "nInd" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"colnames" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"tryCatch" "try" "validObject" "initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".identC" "possibleExtends" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"validObject" "buildUp" "buildUp" 
"colnames" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"possibleExtends" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"matrix" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"$" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".identC" "is" "isColony" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "possibleExtends" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"ifelse" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"na.omit" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"...elt" "stopifnot" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"class" ".identC" "possibleExtends" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".identC" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is.na" "ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getClassDef" "is" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"lengths" "unique" "simplify2array" "sapply" "...elt" "stopifnot" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"tryCatchList" "tryCatch" "try" "validObject" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addDrones" "buildUp" "buildUp" 
"initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"environment" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isColony" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".identC" "checkSlotAssignment" "slot<-" "asMethod" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"is" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"na.omit" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "buildUp" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "addCastePop" "addWorkers" "buildUp" "buildUp" 
"validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "addDrones" "buildUp" "buildUp" 
"names" "loadedNamespaces" "%in%" ".rs.reticulate.replIsActive" 
".sigLabel" ".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "createColony" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".hasSlot" "calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".local" "[" "[" "pullInd" "pullCastePop" "pullWorkers" "split" "split" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "resetEvents" "createColony" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"validObject" "setLocation" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getNamespace" ".requirePackage" ".classEnv" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getClassDef" "is" "isMultiColony" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "createColony" "split" "split" 
"getClassDef" "is" "isPop" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isColony" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"$" "createColony" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"$" "cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"possibleExtends" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"length" ".class1" "as" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"packageSlot" ".classEnv" "as" "checkSlotAssignment" "slot<-" "pullCastePop" "pullWorkers" "split" "split" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isColony" "isQueenPresent" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"nCaste" "nQueens" "isQueenPresent" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"vapply" "order" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".identC" "possibleExtends" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"possibleExtends" "validObject" "setLocation" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"split" "split" 
"getLociNames" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"matrix" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"is" "isColony" "nCaste" "nQueens" "isQueenPresent" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
".local" "[" "[" "pullInd" "pullCastePop" "pullWorkers" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"asMethod" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "pullInd" "pullCastePop" "pullWorkers" "split" "split" 
"tryCatch" "try" "validObject" "createColony" "split" "split" 
"@<-" ".local" "[" "[" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getMethodsTable" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"$" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".local" "[" "[" "pullInd" "pullCastePop" "pullWorkers" "split" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"eval" "eval" "match.arg" "order" "selectInd" "getCastePop" "getQueen" "nInd" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"tryCatch" "try" "validObject" "setLocation" "split" "split" 
"getClassDef" "is" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"validObject" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"possibleExtends" "validObject" "createColony" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"anyDuplicated" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"dimnames" "rownames<-" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"<Anonymous>" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".identC" "is" "isMultiColony" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"checkSexes" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"initialize" "initialize" "new" "createColony" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getClassDef" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "split" "split" 
"stopifnot" "is" "isPop" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".identC" "is" "isColony" "pullCastePop" "pullWorkers" "split" "split" 
"rev" "validObject" "initialize" "initialize" "new" "createColony" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"<Anonymous>" "resetEvents" "createColony" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"tryCatch" "try" "validObject" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"slot" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"all" "stopifnot" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"validObject" "setLocation" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "createColony" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"validObject" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"[[" "is" "isColony" "split" "split" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"possibleExtends" "validObject" "initialize" "initialize" "new" "createColony" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is.na" "ifelse" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "split" "split" 
"@<-" ".local" "[" "[" "pullInd" "pullCastePop" "pullWorkers" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".local" "[" "[" "selectInd" "pullInd" "pullCastePop" "pullWorkers" "split" "split" 
"tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[[<-" "[[<-" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".local" "[" "[" "pullInd" "pullCastePop" "pullWorkers" "split" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"all" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"validObject" "split" "split" 
".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
".local" "[" "[" "pullInd" "pullCastePop" "pullWorkers" "split" "split" 
"getClassDef" "validObject" "createColony" "split" "split" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is.data.frame" "colnames" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"split" 
"is.list" "getClassDef" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"rnorm" "getResponse" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is" "isColony" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "createColony" "split" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
".getClassesFromCache" "getClassDef" "getClass" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"is.data.frame" "colnames<-" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"attributes" "ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"@<-" ".local" "[" "[" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "createColony" "split" "split" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "setLocation" "split" "split" 
"match.arg" "order" "selectInd" "getCastePop" "getQueen" "nInd" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getGeneric" "getGeneric" "as" "initialize" "initialize" "new" "createColony" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isColony" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"...elt" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isMultiColony" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"getClassDef" "is" "isPop" "isCaste" "isQueen" "createColony" "split" "split" 
"matrix" "convToImat" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"slot<-" "asMethod" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"isFALSE" "validObject" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".local" "[" "[" "selectInd" "pullInd" "pullCastePop" "pullWorkers" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".local" "[" "[" "selectInd" "pullInd" "pullCastePop" "pullWorkers" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "validObject" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isColony" "resetEvents" "createColony" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getClass" "new" "createColony" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" ".findMethodInTable" ".quickCoerceSelect" "as" "initialize" "initialize" "new" "createColony" "split" "split" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".identC" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
".getClassesFromCache" "getClassDef" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"initialize" "initialize" "new" "createColony" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" ".findMethodInTable" ".quickCoerceSelect" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"possibleExtends" "validObject" "initialize" "initialize" "new" "createColony" "split" "split" 
"getClass" "<Anonymous>" ".local" "[" "[" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"class" "is" "isColony" "isQueenPresent" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".identC" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".classEnv" "validObject" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
".classEnv" "validObject" "initialize" "initialize" "new" "createColony" "split" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"<Anonymous>" "cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getClassDef" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "createColony" "split" "split" 
".getMethodsTable" "as" "initialize" "initialize" "new" "createColony" "split" "split" 
".getClassesFromCache" "getClassDef" "initialize" "initialize" "new" "createColony" "split" "split" 
"nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "split" "split" 
"[[<-" "[[<-" "split" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"$" "cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"getClassDef" "validObject" "setLocation" "split" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isColony" "nCaste" "nWorkers" "isWorkersPresent" "split" "split" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "createColony" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"$" "checkSexes" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"possibleExtends" "validObject" "setLocation" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getGeneric" "getGeneric" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isColony" "split" "split" 
".getClassesFromCache" "getClassDef" "validObject" "initialize" "initialize" "new" "createColony" "split" "split" 
"tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"all" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"getClassDef" "possibleExtends" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"...elt" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"all" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
".identC" "possibleExtends" "initialize" "initialize" "new" "createColony" "split" "split" 
"simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getClassDef" "initialize" "initialize" "new" "createColony" "split" "split" 
"@<-" ".local" "[" "[" "pullInd" "pullCastePop" "pullWorkers" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"validObject" "initialize" "initialize" "new" "createColony" "split" "split" 
"stopifnot" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"validObject" "createColony" "split" "split" 
".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getClassDef" "getClass" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"tryCatch" "try" "validObject" "resetEvents" "createColony" "split" "split" 
".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" "split" "split" 
".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"<Anonymous>" ".local" "[" "[" "selectInd" "pullInd" "pullCastePop" "pullWorkers" "split" "split" 
"...elt" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"slot" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "resetEvents" "createColony" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isMultiColony" "isWorkersPresent" "split" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "createColony" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"lapply" "addError" "calcPheno" "setPheno" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"possibleExtends" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"slot" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "setLocation" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"unique" "simplify2array" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "createColony" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"all" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"class" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"as" "checkSlotAssignment" "slot<-" "pullCastePop" "pullWorkers" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"attr" "packageSlot" ".classEnv" "as" "initialize" "initialize" "new" "createColony" "split" "split" 
"mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getClassDef" "is" "isPop" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"[" "selectInd" "getCastePop" "getQueen" "nInd" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"eval" "match.arg" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"anyNA" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "split" "split" 
"slot" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "createColony" "split" "split" 
".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"environment" "exists" ".getMethodsTable" "as" "checkSlotAssignment" "slot<-" "pullCastePop" "pullWorkers" "split" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" "resetEvents" "createColony" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"all" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"[" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"prod" "apply" "isGenoHeterozygous" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"slot<-" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"validObject" ".local" "[[<-" "[[<-" "split" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "createColony" "split" "split" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
".identC" "possibleExtends" "validObject" ".local" "[[" "[[" "is" "isColony" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"is" "isMapPop" "createCastePop" "createVirginQueens" "split" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "createColony" "split" "split" 
"match.arg" "order" "selectInd" "getCastePop" "getQueen" "nInd" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "createColony" "split" "split" 
".getClassesFromCache" "getClassDef" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "split" "split" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "createColony" "split" "split" 
"unique" "simplify2array" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "split" 
"mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "split" "split" 
"structure" "object.size" ".rs.describeObject" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueDescriptionImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" ".rs.describeObject" 
"mode" "%in%" "deparse" "mode" "%in%" "deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
".Call" ".rs.getKnitParamsForDocument" ".rs.injectKnitrParamsObject" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"substring" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"substring" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"grepl" ".rs.makeCompletions" ".rs.getCompletionsActiveFrame" "Reduce" ".rs.rpc.get_completions" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "pullColonies" 
"structure" "object.size" ".rs.describeObject" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"grepl" ".rs.makeCompletions" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"FUN" "lapply" "unlist" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"basename" "sort" ".rs.getCompletionsPackages" "Reduce" ".rs.rpc.get_completions" 
"is" "isPop" "isEmpty" "FUN" "lapply" "sapply" "isEmpty" "nEmptyColonies" "cat" "<Anonymous>" "<Anonymous>" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "isNULLColonies" "nNULLColonies" "cat" "<Anonymous>" "<Anonymous>" 
"isColony" "FUN" "lapply" "sapply" "isEmpty" "<Anonymous>" "<Anonymous>" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "is" "isColony" "hasSplit" "cat" "<Anonymous>" "<Anonymous>" 
"lapply" "sapply" "getId" "hasSwarmed" "cat" "<Anonymous>" "<Anonymous>" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "hasSuperseded" "cat" "<Anonymous>" "<Anonymous>" 
"...elt" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "isProductive" "cat" "<Anonymous>" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
".Call" ".rs.getKnitParamsForDocument" ".rs.injectKnitrParamsObject" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
".Call" ".rs.getKnitParamsForDocument" ".rs.injectKnitrParamsObject" ".rs.rpc.get_completions" 
"getClassDef" "is" "isPop" "isEmpty" "FUN" "lapply" "sapply" "isEmpty" "nEmptyColonies" "cat" "<Anonymous>" "<Anonymous>" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "isNULLColonies" "nNULLColonies" "cat" "<Anonymous>" "<Anonymous>" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "isEmpty" "<Anonymous>" "<Anonymous>" 
"validObject" ".local" "[" "[" "is" "isColony" "hasSwarmed" "cat" "<Anonymous>" "<Anonymous>" 
"is" "isColony" "FUN" "lapply" "sapply" "hasSuperseded" "cat" "<Anonymous>" "<Anonymous>" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "is" "isColony" "isProductive" "cat" "<Anonymous>" "<Anonymous>" 
"%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
".identC" "possibleExtends" "validObject" ".local" "[[" "[[" "is" "isMapPop" "createCastePop" "createVirginQueens" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" 
"apply" "isGenoHeterozygous" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" 
"strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"...elt" "stopifnot" "modifyList" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"isS4" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"sys.call" "match.call" "as.vector" "setdiff" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"as.name" "eval" "FUN" "lapply" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
".getClassesFromCache" "getClassDef" "validObject" ".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"slot" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"levels" "Ops.factor" "isCaste" "isQueen" "reQueen" "reQueen" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"all" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"levels" "Ops.factor" "isCaste" "isQueen" "reQueen" "reQueen" 
"validObject" ".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"unique.default" "unique" "simplify2array" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"...elt" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
".getClassesFromCache" "getClassDef" "validObject" ".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"...length" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"possibleExtends" "validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"validObject" ".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" "stopifnot" "is" "isPop" "isCaste" "isQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isPop" "isCaste" "isQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isPop" "isCaste" "isQueen" "reQueen" "reQueen" 
"sys.call" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" "stopifnot" "is" "isPop" "isCaste" "isQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isPop" "isCaste" "isQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isPop" "isCaste" "isQueen" "reQueen" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"as.character" "unique" "factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
".identC" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "reQueen" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"class" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"as" "checkSlotAssignment" "slot<-" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "reQueen" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"getClass" "<Anonymous>" ".local" "[" "[" "is" "isPop" "reQueen" "reQueen" 
"validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"unique" "simplify2array" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "reQueen" 
"@<-" ".local" "[" "[" "is" "isPop" "reQueen" 
"@<-" ".local" "[" "[" "is" "isPop" "reQueen" "reQueen" 
".getClassesFromCache" "getClassDef" "possibleExtends" "validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
".identC" "possibleExtends" "validObject" ".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"possibleExtends" "validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isColony" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isColony" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isColony" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isColony" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isColony" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isColony" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
".local" "[" "[" "is" "isPop" "reQueen" "reQueen" 
"is.na" "ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"possibleExtends" "validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"is" "isPop" "isCaste" "isQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"checkSlotAssignment" "slot<-" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"character" "validObject" ".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"tryCatch" "try" "validObject" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
".identC" "possibleExtends" "validObject" ".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"validObject" ".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"isPop" "isCaste" "isQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"anyNA" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"is" "isPop" "isCaste" "isQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"anyNA" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"lengths" "unique" "simplify2array" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"attributes" "validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
".getClassesFromCache" "getClassDef" "is" "isMultiColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "reQueen" "reQueen" 
".getClassesFromCache" "getClassDef" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"validObject" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"getClassDef" "possibleExtends" "validObject" "removeCastePop" "removeQueen" "reQueen" "reQueen" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isMultiColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "reQueen" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "reQueen" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "reQueen" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "reQueen" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" 
"conditionCall" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "pullColonies" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "pullColonies" 
"structure" "object.size" ".rs.describeObject" 
"structure" "object.size" ".rs.describeObject" 
"initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
".getClassesFromCache" "getClassDef" "validObject" "setLocation" "swarm" "swarm" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"paste" ".sigLabel" ".findMethodInTable" ".quickCoerceSelect" "as" "initialize" "initialize" "new" "createColony" "swarm" "swarm" 
".local" "[" "[" "selectInd" "swarm" "swarm" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getWorkers" "swarm" "swarm" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getDrones" "swarm" "swarm" 
"parent.frame" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getDrones" "swarm" "swarm" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "swarm" "swarm" 
".identC" "<Anonymous>" ".local" "[" "[" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"eval" "match.arg" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "resetEvents" "createColony" "swarm" "swarm" 
"unlist" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
".local" "[" "[" "selectInd" "pullInd" "pullCastePop" "pullWorkers" "swarm" "swarm" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"vapply" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "swarm" "swarm" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"is.na" "isFALSE" "validObject" ".local" "[[" "[[" "is" "isColony" "swarm" "swarm" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "swarm" "swarm" 
".identC" "possibleExtends" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "createColony" "swarm" "swarm" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "swarm" "swarm" 
"stopifnot" "is" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
".getClassesFromCache" "getClassDef" "validObject" "resetEvents" "createColony" "swarm" "swarm" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getDrones" "swarm" "swarm" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "createColony" "swarm" "swarm" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "createColony" "swarm" "swarm" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "swarm" "swarm" 
"factor" "<Anonymous>" "isCaste" "isQueen" "createColony" "swarm" "swarm" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getDrones" "swarm" "swarm" 
"$" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"validObject" "createColony" "swarm" "swarm" 
"structure" "object.size" ".rs.describeObject" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "pullColonies" 
"unique.default" "unique" "simplify2array" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "pullColonies" 
"unique.default" "unique" "simplify2array" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "pullColonies" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "pullColonies" 
"structure" "object.size" ".rs.describeObject" 
"structure" "object.size" ".rs.describeObject" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "supersede" "supersede" 
"simParamBee$changeCaste" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"c" "simParamBee$addToCaste" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"all" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "supersede" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"getClass" "initialize" "initialize" "new" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"anyDuplicated" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"c" "match.arg" "order" "selectInd" "getCastePop" "getFathers" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "supersede" 
"simParamBee$changeCaste" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "c" "c" "c" 
"structure" "object.size" ".rs.describeObject" 
"isColony" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"vapply" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"anyNA" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"length" "Ops.factor" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"vapply" "order" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"list" "factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"getClassDef" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"stopifnot" "is" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"stopifnot" "is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "getCastePop" "getDrones" "createDCA" 
"FUN" "lapply" "do.call" "mergePops" "createDCA" 
"mergeMultGeno" "mergePops" "createDCA" 
".local" "[" "[" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"stopifnot" "is" "isPop" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"stopifnot" "is" "isPop" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"stopifnot" "is" "isPop" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"@<-" ".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"stopifnot" "is" "isPop" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"stopifnot" "is" "isPop" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"stopifnot" "is" "isPop" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"stopifnot" "is" "isPop" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"stopifnot" "is" "isPop" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"conditionMessage" "paste0" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" "stopifnot" "is" "isPop" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"stopifnot" "is" "isPop" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"stopifnot" "is" "isPop" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"stopifnot" "is" "isPop" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"stopifnot" "is" "isPop" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"pmatch" ".deparseOpts" "deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" "stopifnot" "is" "isPop" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"stopifnot" "is" "isPop" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"stopifnot" "is" "isPop" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"is.list" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"@<-" ".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"anyStrings" "validObject" ".local" "[[" "[[" "is" "isPop" "cross" "cross" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"is.list" "getClassDef" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"try" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
".identC" "possibleExtends" "validObject" ".local" "[[" "[[" "is" "isPop" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"getClassDef" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"validObject" ".local" "[[" "[[" "is" "isPop" "cross" "cross" 
"get" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"...elt" "stopifnot" "is" "isPop" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"stopifnot" "is" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"getClassDef" "possibleExtends" "validObject" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
".quickCoerceSelect" "as" "checkSlotAssignment" "slot<-" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"order" "selectInd" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"nInd" "setMisc" "cross" "cross" "cross" 
"[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "cross" "cross" 
"getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"stopifnot" "is" "isPop" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"stopifnot" "is" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"<Anonymous>" "setMisc" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
".getClassesFromCache" "getClassDef" "is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "cross" 
"...elt" "stopifnot" "is" "isPop" "setMisc" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"stopifnot" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
".getClassesFromCache" "getClassDef" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"<Anonymous>" "checkSexes" "selectInd" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"@<-" ".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"@<-" ".local" "[" "[" "selectInd" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
".identC" "is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"stopifnot" "is" "isPop" "setMisc" "cross" "cross" "cross" 
"getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"tryCatchList" "tryCatch" "try" "validObject" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"is" "isPop" "setMisc" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
".identC" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is" "isColony" "nCaste" "nQueens" "isQueenPresent" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"paste" "%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"anyNA" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"match.arg" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"get" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "cross" "cross" "cross" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"possibleExtends" "validObject" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"all" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"duplicated" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"simplify2array" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"isFALSE" "validObject" ".local" "[[" "[[" "is" "isPop" "cross" "cross" 
"unlist" "simplify2array" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"eval" "match.arg" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
".local" "[" "[" "selectInd" "cross" "cross" 
"[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"tryCatchList" "tryCatch" "try" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"tryCatch" "try" "validObject" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"<Anonymous>" ".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
".getClassesFromCache" "getClassDef" "validObject" ".local" "[[" "[[" "is" "isPop" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
".getClassesFromCache" "getClassDef" "validObject" ".local" "[[" "[[" "is" "isPop" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"is.ordered" "force" "factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"validObject" ".local" "[[" "[[" "is" "isPop" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"is" "isPop" "isCaste" "isQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"isFALSE" "validObject" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"rnorm" "getResponse" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"slot" "asMethod" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"levels" "Ops.factor" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"validObject" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isPop" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "cross" "cross" "cross" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"<Anonymous>" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unlist" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
".identC" "possibleExtends" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"try" "validObject" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"getClassDef" "is" "isMultiColony" "isVirginQueensPresent" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"invisible" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "cross" "cross" 
"@<-" ".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"setMisc" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"getClassDef" "getClass" "<Anonymous>" "reQueen" "cross" "cross" 
"is" "isColony" "nCaste" "nQueens" "isQueenPresent" "cross" "cross" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"class" ".identC" "possibleExtends" "validObject" ".local" "[[" "[[" "is" "isPop" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"<Anonymous>" ".local" "[[<-" "[[<-" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"<Anonymous>" ".local" "[" "[" "selectInd" "cross" "cross" 
"pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is.list" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is" "isMultiColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
".identC" "possibleExtends" "validObject" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is" "isColony" "hasCollapsed" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"stopifnot" "is" "isPop" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"getClassDef" "is" "isPop" "setMisc" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"@<-" ".local" "[" "[" "selectInd" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"validObject" "cross" "cross" "cross" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "cross" "cross" 
"removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"levels" "Ops.factor" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"all" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"validObject" ".local" "[[" "[[" "is" "isPop" "cross" "cross" 
"nrow" "matrix" "convToImat" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"validObject" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"isTRUE" "anyStrings" "validObject" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"getGeneric" "as" "checkSlotAssignment" "slot<-" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is" "isMultiColony" "isVirginQueensPresent" "cross" "cross" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"anyStrings" "validObject" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"parent.frame" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"vapply" "order" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"c" "eval" "eval" "match.arg" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"stopifnot" "is" "isColony" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"slot" "ifelse" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"eval" "match.arg" "order" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"eval" "match.arg" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"c" "do.call" "mergePops" "createDCA" 
"mergeMultGeno" "mergePops" "createDCA" 
".local" "[" "[" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"<Anonymous>" ".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"rnorm" "getResponse" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"order" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"getClass" "<Anonymous>" ".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
".findMethodInTable" ".quickCoerceSelect" "as" "checkSlotAssignment" "slot<-" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"<Anonymous>" ".local" "[" "[" "selectInd" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"[" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"getLociNames" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"any" ".local" "[" "[" "selectInd" "cross" "cross" 
"isColony" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "cross" "cross" 
"all" "calcQueensPHomBrood" "cross" "cross" "cross" 
"getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "cross" "cross" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
".getMethodsTable" "as" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "cross" "cross" 
"is" "isPop" "setMisc" "cross" "cross" "cross" 
"is" "isColony" "nCaste" "nVirginQueens" "isVirginQueensPresent" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"possibleExtends" "validObject" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"getClassDef" "is" "isColony" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"setMisc" "cross" "cross" "cross" 
"<Anonymous>" ".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"is.function" "validObject" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"isS4" "is" "isColony" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"getClassDef" "possibleExtends" "validObject" ".local" "[[" "[[" "is" "isPop" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"all" "stopifnot" "is" "isPop" "setMisc" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"tryCatchList" "tryCatch" "try" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"stopifnot" "is" "isPop" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"getClassDef" "is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"stopifnot" "is" ".findMethodInTable" ".quickCoerceSelect" "as" "checkSlotAssignment" "slot<-" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"checkSexes" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"rev" "validObject" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is" "isPop" "cross" "cross" 
"is" "isColony" "hasCollapsed" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"is" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"tolower" "getResponse" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"@<-" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
".getClassesFromCache" "getClassDef" "possibleExtends" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"setMisc" "cross" "cross" "cross" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"tryCatchList" "tryCatch" "try" "validObject" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
".getClassesFromCache" "getClassDef" "is" "isMultiColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
".getClassesFromCache" "getClassDef" "validObject" ".local" "[[" "[[" "is" "isPop" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"<Anonymous>" ".local" "[[<-" "[[<-" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
".identC" "<Anonymous>" "setMisc" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"tryCatch" "try" "validObject" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
".identC" "possibleExtends" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"stopifnot" "is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "cross" "cross" 
"is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"length" "tryCatch" "try" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
":" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
".identC" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"paste0" "FUN" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"unique" "factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "reQueen" "cross" "cross" 
"paste" "%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
".getClassesFromCache" "getClassDef" "is" "isPop" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"attributes" "ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
".getClassesFromCache" "getClassDef" "validObject" "reQueen" "cross" "cross" 
"order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"...elt" "stopifnot" "is" "isPop" "setMisc" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"all" "stopifnot" "selectInd" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "cross" "cross" "cross" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
".getClassesFromCache" "getClassDef" "is" "isPop" "setMisc" "cross" "cross" "cross" 
"$" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "cross" "cross" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"getClassDef" "validObject" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
".identC" "<Anonymous>" ".local" "[" "[" "selectInd" "cross" "cross" 
"paste0" "FUN" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"levels" "Ops.factor" "isCaste" "isDrone" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"$" "checkSexes" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"$" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
".getClassesFromCache" "getClassDef" "is" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
".getClassesFromCache" "getClassDef" "is" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isPop" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"...length" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "cross" "cross" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"paste0" "FUN" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
".local" "[" "[" "selectInd" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"getClassDef" "is" "isPop" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"order" "selectInd" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "cross" "cross" 
".getClassesFromCache" "getClassDef" "validObject" ".local" "[[" "[[" "is" "isPop" "cross" "cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"FUN" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"...length" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"ifelse" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"getClassDef" "is" "isMultiColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" "cross" 
"validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"all" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "cross" "cross" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"slot" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"paste0" "FUN" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"stopifnot" "is" "isPop" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "cross" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectColonies" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "pullColonies" 
".getClassesFromCache" "getClassDef" "is" "isMultiColony" "isWorkersPresent" "swarm" "swarm" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"validObject" "setLocation" "swarm" "swarm" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "createColony" "swarm" "swarm" 
"simParamBee$changeCaste" "createCastePop" "createVirginQueens" "swarm" "swarm" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "c" "c" "c" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "pullColonies" 
"cross" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"c" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"pullMarkerGeno" "getCsdGeno" "isCsdHeterozygous" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"tryCatch" "try" "validObject" "supersede" "supersede" 
"is.list" "getClassDef" "is" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"getGv" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"rbind" "simParam$addToRec" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"is" "selectInd" "supersede" "supersede" 
".local" "[[<-" "[[<-" "supersede" 
"validObject" "initialize" "initialize" "new" ".newPop" "makeCross2" "randCross2" "combineBeeGametes" "createCastePop" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"simParamBee$changeCaste" "createCastePop" "addCastePop" "addVirginQueens" "removeCastePop" "removeQueen" "supersede" "supersede" 
"isPop" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "c" "c" "c" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
".identC" "possibleExtends" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" ".findMethodInTable" ".quickCoerceSelect" "as" "checkSlotAssignment" "slot<-" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isMultiColony" "isQueenPresent" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"validityMethod" "isTRUE" "anyStrings" "validObject" "initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"anyDuplicated" "initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".identC" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"...elt" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"validObject" "initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"...elt" "stopifnot" "is" "isMultiColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"nCaste" "nQueens" "isQueenPresent" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getClassDef" "getClass" "<Anonymous>" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"order" "selectInd" "getCastePop" "getQueen" "is" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"rev" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"validObject" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getClassDef" "is" "isColony" "isQueenPresent" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"%in%" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".identC" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"isTRUE" "anyStrings" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"vapply" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".identC" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"@<-" "setPheno" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"possibleExtends" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is.data.frame" "colnames" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"anyDuplicated" "initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"slot" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".getClassesFromCache" "getClassDef" "validObject" "initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isColony" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"<Anonymous>" "setPheno" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"$" "setPheno" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"tryCatch" "try" "validObject" "initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"class" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"<Anonymous>" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"try" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"[" "selectInd" "getCastePop" "getQueen" "is" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"class" "is" "isMultiColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simplify2array" "sapply" "...elt" "stopifnot" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"...elt" "stopifnot" "is" "isMapPop" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"length" "...elt" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".identC" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
".identC" "<Anonymous>" "setPheno" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"...elt" "stopifnot" "is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"parent.frame" "tryCatch" "try" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"list" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"<Anonymous>" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".getClassesFromCache" "getClassDef" "initialize" "initialize" "new" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".identC" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"...elt" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getClassDef" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"nInd" "ifelse" "nCaste" "nQueens" "isQueenPresent" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isColony" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParamBee$addToCaste" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "ifelse" "nCaste" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"is" ".findMethodInTable" ".quickCoerceSelect" "as" "checkSlotAssignment" "slot<-" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "initialize" "initialize" "new" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"createDH2" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"rbind" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"$" "getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"c" "simParam$addToRec" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"getGv" ".newPop" "makeDH" "createCastePop" "addCastePop" "replaceCastePop" "replaceCastePop" "replaceDrones" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[<-" "[[<-" "replaceCastePop" "replaceDrones" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"getClassDef" "possibleExtends" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"lapply" "do.call" "mergePops" "createDCA" 
"mergeMultGeno" "mergePops" "createDCA" 
"mergeMultGeno" "mergePops" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "[" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"%in%" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"validObject" ".local" "[[" "[[" "is" "isPop" "cross" "cross" 
"paste" "%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"getClassDef" "possibleExtends" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"possibleExtends" "validObject" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isVirginQueen" "cross" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "cross" "cross" "cross" 
"@<-" ".local" "[[<-" "[[<-" "cross" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" "removeCastePop" "removeVirginQueens" "cross" "cross" 
".getClassesFromCache" "getClassDef" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"...length" "stopifnot" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"is" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"order" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"levels" "Ops.factor" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".identC" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".getClassesFromCache" "getClassDef" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"slot" "ifelse" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"ifelse" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"possibleExtends" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCastePop" "getDrones" "createDCA" 
"c" "do.call" "mergePops" "createDCA" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "[" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"selectInd" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
".local" "[" "[" "pullInd" "pullDroneGroupsFromDCA" "cross" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "cross" "cross" "cross" 
"simParamBee$changeCaste" "cross" "cross" "cross" 
"%in%" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "cross" "cross" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"stopifnot" "is" "isMultiColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isDrone" "cross" "cross" "cross" 
"class" "validObject" "cross" "cross" 
"rev" "validObject" "removeCastePop" "removeVirginQueens" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"factor" "<Anonymous>" "isCaste" "isQueen" "reQueen" "cross" "cross" 
"vapply" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" 
".identC" "possibleExtends" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" 
"validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" 
".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" 
"slot" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" 
"validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" 
".getClassesFromCache" "getClassDef" "is" "isColony" "getGv" "getGv" "lapply" "sapply" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" 
"structure" "object.size" ".rs.describeObject" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "match" "[" ".local" "[" "[" "selectColonies" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "selectColonies" 
"paste0" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
".rs.matchCall" ".rs.getCompletionsArgument" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tolower" ".rs.startsWith" ".rs.fuzzyMatches" "FUN" "lapply" "Reduce" ".rs.appendCompletions" ".rs.getCompletionsLibraryContext" "Reduce" ".rs.rpc.get_completions" 
"strsplit" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
".Call" ".rs.getKnitParamsForDocument" ".rs.injectKnitrParamsObject" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
".Call" ".rs.getKnitParamsForDocument" ".rs.injectKnitrParamsObject" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
".Call" ".rs.getKnitParamsForDocument" ".rs.injectKnitrParamsObject" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"substring" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"grepl" ".rs.makeCompletions" ".rs.emptyCompletions" ".rs.getCompletionsLibraryContext" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"grepl" ".rs.makeCompletions" "FUN" "lapply" "Reduce" ".rs.appendCompletions" ".rs.getCompletionsLibraryContext" "Reduce" ".rs.rpc.get_completions" 
"deparse" "mode" "%in%" "deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"sort.int" "sort.default" "sort" ".rs.getCompletionsPackages" "Reduce" ".rs.rpc.get_completions" 
"grepl" ".rs.makeCompletions" ".rs.emptyCompletions" ".rs.getCompletionsSingleBracket" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
".Call" ".rs.listIndexedPackages" "basename" "sort" ".rs.getCompletionsPackages" "Reduce" ".rs.rpc.get_completions" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" 
"isPop" "getGv" "getGv" "lapply" "sapply" 
"@<-" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" 
"tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" 
".getClassesFromCache" "getClassDef" "possibleExtends" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" 
"tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" 
"tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" 
"length" "isFALSE" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" 
".getClassesFromCache" "getClassDef" "possibleExtends" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" 
"possibleExtends" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" 
"isPop" "getGv" "getGv" "lapply" "sapply" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "getGv" "lapply" "sapply" 
"utils::rc.getOption" ".rs.isCustomCompletionsEnabled" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" 
"getClass" "<Anonymous>" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" 
"@<-" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" 
"is" "isPop" "getGv" "getGv" "lapply" "sapply" 
".requirePackage" ".classEnv" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" 
"rnorm" "getResponse" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" 
"grep" "is.ddsym" "cmpSym" "cmp" "cmpSubsetDispatch" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "FUN" "lapply" "sapply" 
"encodeString" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueDescriptionImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" ".rs.describeObject" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "%in%" "selectColonies" 
"isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "selectColonies" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "selectColonies" 
"structure" "object.size" ".rs.describeObject" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" ".local" "[" "[" "selectColonies" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"codeBufCode" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "maintainIrelandSize" 
"is" "isColony" "FUN" "lapply" "sapply" "hasSplit" "maintainIrelandSize" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "match" "[" ".local" "[" "[" "selectColonies" "pullColonies" "maintainIrelandSize" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "selectColonies" "pullColonies" "maintainIrelandSize" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "selectColonies" "removeColonies" "pullColonies" "maintainIrelandSize" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "match" "[" ".local" "[" "[" "selectColonies" "removeColonies" "pullColonies" "maintainIrelandSize" 
"isColony" "FUN" "lapply" "sapply" "getId" "%in%" "selectColonies" "pullColonies" "maintainIrelandSize" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "%in%" "removeColonies" "pullColonies" "maintainIrelandSize" 
"duplicated" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" ".local" "[" "[" "selectColonies" "removeColonies" "pullColonies" "maintainIrelandSize" 
"simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"cb$putcode" "cmpSym" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSubsetDispatch" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "maintainCarSize" 
"cb$putcode" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "maintainCarSize" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "%in%" "pullColonies" "maintainCarSize" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" ".local" "[" "[" "selectColonies" "pullColonies" "maintainCarSize" 
"FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "selectColonies" "pullColonies" "maintainCarSize" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "%in%" "removeColonies" "pullColonies" "maintainCarSize" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "match" "[" ".local" "[" "[" "selectColonies" "removeColonies" "pullColonies" "maintainCarSize" 
"<Anonymous>" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "maintainCarSize" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "maintainCarSize" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "maintainCarSize" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "maintainCarSize" 
".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "maintainCarSize" 
".getClassesFromCache" "getClassDef" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "maintainCarSize" 
"stopifnot" "is" "isColony" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "maintainCarSize" 
"@<-" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "maintainCarSize" 
"...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "%in%" "pullColonies" "maintainCarSize" 
"unique" "simplify2array" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "selectColonies" "pullColonies" "maintainCarSize" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "%in%" "selectColonies" "removeColonies" "pullColonies" "maintainCarSize" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "pullColonies" "maintainCarSize" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "pullColonies" "maintainCarSize" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "pullColonies" "maintainCarSize" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "pullColonies" "maintainCarSize" 
"dots.or.missing" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "genCode" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"withCallingHandlers" "base::suppressWarnings" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "isNULLColonies" "nNULLColonies" "cat" "<Anonymous>" "<Anonymous>" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "isEmpty" "<Anonymous>" "<Anonymous>" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "is" "isColony" "hasSwarmed" "cat" "<Anonymous>" "<Anonymous>" 
"...length" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "hasSuperseded" "cat" "<Anonymous>" "<Anonymous>" 
"duplicated" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "is" "isColony" "isProductive" "cat" "<Anonymous>" "<Anonymous>" 
"...elt" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "isNULLColonies" "<Anonymous>" "<Anonymous>" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "isEmpty" "<Anonymous>" "<Anonymous>" 
"FUN" "lapply" "sapply" "hasSwarmed" "cat" "<Anonymous>" "<Anonymous>" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "hasCollapsed" "cat" "<Anonymous>" "<Anonymous>" 
"length" "...elt" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "isEmpty" "nEmptyColonies" "cat" "<Anonymous>" "<Anonymous>" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "isNULLColonies" "<Anonymous>" "<Anonymous>" 
"isColony" "FUN" "lapply" "sapply" "getId" "isEmpty" "<Anonymous>" "<Anonymous>" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "is" "isColony" "hasSwarmed" "cat" "<Anonymous>" "<Anonymous>" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "is" "isColony" "hasCollapsed" "cat" "<Anonymous>" "<Anonymous>" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "isProductive" "cat" "<Anonymous>" "<Anonymous>" 
"...elt" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "isNULLColonies" "nNULLColonies" "cat" "<Anonymous>" "<Anonymous>" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "isEmpty" "<Anonymous>" "<Anonymous>" 
"class" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "is" "isColony" "hasSuperseded" "cat" "<Anonymous>" "<Anonymous>" 
"getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "isEmpty" "nEmptyColonies" "cat" "<Anonymous>" "<Anonymous>" 
"all" "stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "isEmpty" "<Anonymous>" "<Anonymous>" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "is" "isColony" "hasSwarmed" "cat" "<Anonymous>" "<Anonymous>" 
"getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "hasCollapsed" "cat" "<Anonymous>" "<Anonymous>" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
".Call" ".rs.getKnitParamsForDocument" ".rs.injectKnitrParamsObject" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"gregexpr" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"as.list" "lapply" "FUN" "lapply" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "maintainCarSize" 
"%in%" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "maintainCarSize" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "maintainCarSize" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "%in%" "selectColonies" "pullColonies" "maintainCarSize" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "%in%" "removeColonies" "pullColonies" "maintainCarSize" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "match" "[" ".local" "[" "[" "selectColonies" "removeColonies" "pullColonies" "maintainCarSize" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "match" "[" ".local" "[" "[" "selectColonies" "removeColonies" "pullColonies" "maintainCarSize" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "match" "[" ".local" "[" "[" "selectColonies" "removeColonies" "pullColonies" "maintainCarSize" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "match" "[" ".local" "[" "[" "selectColonies" "removeColonies" "pullColonies" "maintainCarSize" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "match" "[" ".local" "[" "[" "selectColonies" "removeColonies" "pullColonies" "maintainCarSize" 
"stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" "pullColonies" "maintainCarSize" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "maintainCarSize" 
"validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "maintainCarSize" 
"isFALSE" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "maintainCarSize" 
"possibleExtends" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "maintainCarSize" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "maintainCarSize" 
".identC" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "maintainCarSize" 
"getClass" "<Anonymous>" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "maintainCarSize" 
"getClassDef" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "maintainCarSize" 
"length" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "maintainCarSize" 
"nInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "maintainCarSize" 
".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "maintainCarSize" 
"...length" "stopifnot" "is" "isColony" "FUN" "lapply" "sapply" "getId" "getGv" "lapply" "sapply" "maintainCarSize" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "selectColonies" "pullColonies" "maintainCarSize" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "match" "[" ".local" "[" "[" "selectColonies" "removeColonies" "pullColonies" "maintainCarSize" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"gsub" ".rs.fuzzyMatches" ".rs.selectFuzzyMatches" ".rs.getCompletionsDollar" ".rs.rpc.get_completions" 
"is" "isColony" "FUN" "lapply" "sapply" "isEmpty" "nEmptyColonies" "cat" "<Anonymous>" "<Anonymous>" 
"is" "isPop" "FUN" "lapply" "sapply" "isEmpty" "<Anonymous>" "<Anonymous>" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "hasSplit" "cat" "<Anonymous>" "<Anonymous>" 
"ifelse" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "is" "isColony" "hasSuperseded" "cat" "<Anonymous>" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.rpc.get_completions" 
".getClassesFromCache" "getClassDef" "is" "isPop" "FUN" "lapply" "sapply" "getId" "isNULLColonies" "<Anonymous>" "<Anonymous>" 
".getClassesFromCache" "getClassDef" "is" "isColony" "FUN" "lapply" "sapply" "getId" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[" "[" "is" "isColony" "hasSplit" "cat" "<Anonymous>" "<Anonymous>" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "hasSuperseded" "cat" "<Anonymous>" "<Anonymous>" 
".Call" ".rs.runAsyncRProcess" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
".Call" ".rs.runAsyncRProcess" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
".Call" ".rs.runAsyncRProcess" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"readRDS" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.onAvailablePackagesReady" "<Anonymous>" 
"readRDS" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.onAvailablePackagesReady" "<Anonymous>" 
"readRDS" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.onAvailablePackagesReady" "<Anonymous>" 
"readRDS" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.onAvailablePackagesReady" "<Anonymous>" 
"readRDS" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.onAvailablePackagesReady" "<Anonymous>" 
"readRDS" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.onAvailablePackagesReady" "<Anonymous>" 
"readRDS" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.onAvailablePackagesReady" "<Anonymous>" 
".Call" ".rs.enqueClientEvent" "<Anonymous>" 
".Call" ".rs.enqueClientEvent" "<Anonymous>" 
".rs.tryCatch" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"is.call" "handleColonCall" "fn" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"list.files" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"parse" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"handleLibraryRequireCall" "fn" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"fn" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
".Call" ".rs.readSourceDocument" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"$" "findCenvVar" "findVar" "cmpSym" "cmp" "cmpIndices" "cmpSubsetDispatch" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpForBody" "h" "tryInline" "cmpCall" "cmp" "genCode" "compile" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCompile" 
"tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"setdiff" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"findCenvVar" "findLocVar" "cmpCall" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "cmpBuiltinArgs" "h" "tryInline" "cmpCall" "cmp" "genCode" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "data_rec" 
"new.env" "findCenvVar" "getInlineInfo" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "data_rec" 
"validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"vapply" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"getResponse" "selectInd" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"simParam$ibdHaplo" "pullIbdHaplo" "getIbdHaplo" "apply" "data_rec" 
"aperm.default" "aperm" "apply" "data_rec" 
"%in%" "FUN" "apply" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "is" "isPop" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "data_rec" 
"order" "selectInd" "FUN" "lapply" "getFathers" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".identC" "is" "isColony" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"class" "is" "isColony" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"tolower" "getResponse" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"slot" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"paste" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"getClassDef" "is" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"getClassDef" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"stopifnot" "is" "isColony" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"paste" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"vapply" "order" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"duplicated" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"is" "isPop" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"paste" "%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"integer" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"aperm.default" "aperm" "asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"FUN" "lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"grepl" "reduceDroneHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"grepl" "reduceDroneHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".identC" "possibleExtends" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"checkSexes" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"all" "stopifnot" "is" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"aperm.default" "aperm" "asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"is" "isPop" "reduceDroneHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"duplicated" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"get" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "is" "isColony" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"stopifnot" "is" "isPop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"array" "asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"is" "isColony" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"class" "is" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"paste" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"paste" "%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"...length" "stopifnot" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"all" "stopifnot" "is" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"%in%" "reduceDroneHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"isFALSE" "duplicated.matrix" "duplicated" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"$" "isCsdActive" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"lapply" "unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"colnames" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"stopifnot" "is" "isColony" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"array" "asplit" "duplicated.matrix" "duplicated" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"is" "isPop" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"array" "asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"is" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "is" "isColony" "isQueenPresent" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"vapply" "order" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"grepl" "reduceDroneHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"getLociNames" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"which" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"class" "is" "isPop" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "data_rec" 
"getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"<Anonymous>" "checkSexes" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"stopifnot" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"checkSexes" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "is" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"stopifnot" "is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"stopifnot" "is" "isPop" "FUN" "lapply" "sapply" "getId" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"checkSexes" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"list" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"character" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"possibleExtends" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"stopifnot" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "possibleExtends" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"is" "isColony" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".identC" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"FUN" "vapply" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"any" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"stopifnot" "is" "isPop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".identC" "possibleExtends" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"getClass" "<Anonymous>" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"class" "is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "data_rec" 
"getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"is" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
".getClassesFromCache" "getClassDef" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"parent.frame" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"createIbdMat" "pullIbdHaplo" "getIbdHaplo" "apply" "data_rec" 
"%in%" "FUN" "apply" "data_rec" 
"apply" "data_rec" 
"apply" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "FUN" "lapply" "getFathers" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "FUN" "lapply" "getFathers" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"checkSexes" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"array" "asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"isCsdActive" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"...elt" "stopifnot" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"checkSexes" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".identC" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"array" "asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"$" "checkSexes" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"stopifnot" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"sort.int" "sort.default" "sort" ".rs.getCompletionsPackages" "Reduce" ".rs.rpc.get_completions" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsActiveFrame" "Reduce" ".rs.rpc.get_completions" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"lazyLoadDBfetch" "get" "identical" ".rs.getCompletionType" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsActiveFrame" "Reduce" ".rs.rpc.get_completions" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"grepl" ".rs.makeCompletions" ".rs.emptyCompletions" ".rs.getCompletionsLibraryContext" "Reduce" ".rs.rpc.get_completions" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"simplify2array" "sapply" "reduceDroneHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"strsplit" "lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"stopifnot" "is" "isPop" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"duplicated.matrix" "duplicated" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"strsplit" "lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"$" "paste" "%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"checkSexes" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"is.list" "getClassDef" "is" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unique" "simplify2array" "sapply" "reduceDroneHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"...elt" "stopifnot" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "reduceDroneHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "simplify2array" "sapply" "reduceDroneHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"any" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".identC" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".identC" "is" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"stopifnot" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"array" "asplit" "duplicated.matrix" "duplicated" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"FUN" "lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"stopifnot" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"is" "isColony" "nCaste" "nQueens" "isQueenPresent" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"duplicated.matrix" "duplicated" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"stopifnot" "is" "isColony" "isQueenPresent" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"aperm" "asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"paste" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"is.na" "na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"<Anonymous>" ".local" "[" "[" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "reduceDroneHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".makeMessage" "warning" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"grepl" "reduceDroneHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"FUN" "lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"aperm" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"paste" "%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"strsplit" "lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"stopifnot" "is" "isPop" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"stopifnot" "is" "isPop" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"paste0" "FUN" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"slot" "nInd" "ifelse" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"is.list" "getClassDef" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "is" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getClassDef" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"attributes" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"isFALSE" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"<Anonymous>" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"is" "isColony" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"possibleExtends" "<Anonymous>" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"sys.function" "formals" "match.arg" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"stopifnot" "is" "isColony" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"all" "stopifnot" "is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".identC" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".identC" "is" "isPop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"rev" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"stopifnot" "is" "isMultiColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"is" "isColony" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"...length" "stopifnot" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"environment" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"possibleExtends" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"ifelse" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"is" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"is" "isMultiColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"stopifnot" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"toupper" "checkSexes" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"is" "isColony" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"is" "isPop" "FUN" "lapply" "sapply" "getId" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"print.default" "print" "print.data.frame" "<Anonymous>" 
".deparseOpts" "deparse" "mode" "%in%" "deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"conditionCall" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"%in%" "deparse" "mode" "%in%" "deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
".Call" ".rs.readSourceDocument" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"fn" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"handleLibraryRequireCall" "fn" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"handleRequireNamespaceCall" "fn" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"length" "...elt" "stopifnot" "is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"simParam$ibdHaplo" "pullIbdHaplo" "getIbdHaplo" "apply" "data_rec" 
"simParam$ibdHaplo" "pullIbdHaplo" "getIbdHaplo" "apply" "data_rec" 
"createIbdMat" "pullIbdHaplo" "getIbdHaplo" "apply" "data_rec" 
"aperm.default" "aperm" "apply" "data_rec" 
"deparse" "mode" "%in%" "deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" "apply" "data_rec" 
"apply" "data_rec" 
"apply" "data_rec" 
"apply" "data_rec" 
"apply" "data_rec" 
".local" "[" "[" "is" "isPop" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "is" "isPop" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "FUN" "lapply" "getFathers" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"strsplit" "lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"logical" "vapply" "order" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"integer" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"stopifnot" "is" "isPop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"is" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"strsplit" "lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"<Anonymous>" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".identC" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"is" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"paste" "%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"paste" "%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"paste" "%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "reduceDroneHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"stopifnot" "is" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"...elt" "stopifnot" "is" "isPop" "reduceDroneHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "is" "isPop" "reduceDroneHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"rnorm" "getResponse" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"paste" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getLociNames" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"is" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"formals" "match.arg" "order" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "is" "isPop" "reduceDroneHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"is" "isColony" "isQueenPresent" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"is.list" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"duplicated" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"class" ".identC" "is" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"integer" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getClassDef" "is" "isPop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"colnames<-" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"stopifnot" "is" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"Ops.factor" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"get" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unique" "simplify2array" "sapply" "reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"possibleExtends" "<Anonymous>" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"logical" "vapply" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"...elt" "stopifnot" "is" "isMultiColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getClass" "<Anonymous>" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"possibleExtends" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"<Anonymous>" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "is" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"vapply" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"is" "isColony" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".identC" "is" "isColony" "FUN" "lapply" "sapply" "getId" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getClassDef" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".identC" "possibleExtends" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"match.arg" "order" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getClassDef" "is" "isColony" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "is" "isColony" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".identC" "possibleExtends" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"isColony" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"all" "stopifnot" "is" "isColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
".identC" "possibleExtends" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"stopifnot" "is" "selectInd" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"is" "isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
".identC" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "is" "isColony" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"is" "selectInd" "getCastePop" "getCastePop" "getQueen" "is" "mergePops" "data_rec" 
"aperm.default" "aperm" "apply" "data_rec" 
"%in%" "FUN" "apply" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"getClassDef" "is" "isPop" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "is" "isPop" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "nFathers" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "FUN" "lapply" "getFathers" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"<Anonymous>" ".local" "[" "[" "selectInd" "FUN" "lapply" "getFathers" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"$" "paste" "%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"is.na" "isTRUE" "which" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"array" "asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"is" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"$" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"rownames<-" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"order" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"makeRestartList" "withRestarts" ".signalSimpleWarning" "warning" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"array" "asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"structure" "simpleWarning" "doWithOneRestart" "withOneRestart" "withRestarts" ".signalSimpleWarning" "warning" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"eval" "match.arg" "order" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "is" "isColony" "nCaste" "nQueens" "isQueenPresent" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"FUN" "vapply" "order" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"strsplit" "lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getClassDef" "is" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"slot" "ifelse" "nCaste" "nQueens" "isQueenPresent" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"array" "asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getClassDef" "is" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"strsplit" "lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"eval" "match.arg" "order" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "getCsdAlleles" "nCsdAlleles" "FUN" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"FUN" "lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"...elt" "stopifnot" "is" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"is" "isPop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"all" "stopifnot" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"duplicated" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"ifelse" "nCaste" "nQueens" "isQueenPresent" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"rnorm" "getResponse" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"...elt" "stopifnot" "is" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"paste" "%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"nCaste" "nQueens" "isQueenPresent" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"strsplit" "lapply" "sapply" "reduceDroneHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"FUN" "lapply" "unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".identC" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"[" "[" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"match.fun" "vapply" "order" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"class" "is" "isPop" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"na.omit.default" "na.omit" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".getClassesFromCache" "getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"all" "stopifnot" "is" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"isCsdActive" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"aperm" "asplit" "duplicated.matrix" "duplicated" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"stopifnot" "is" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isDrone" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getCsdAlleles" "FUN" "lapply" "getCsdAlleles" "nCsdAlleles" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"getHaplo" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"paste" "%in%" "...elt" "stopifnot" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"which" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"FUN" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"simplify2array" "sapply" "reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"<Anonymous>" ".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"NextMethod" "[.factor" "[" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"reduceDroneHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"factor" "<Anonymous>" "isCaste" "isQueen" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"unlist" "mapLoci" "pullMarkerHaplo" "getCsdAlleles" "apply" "calcQueensPHomBrood" "data.frame" "rbind" "rbind" "data_rec" 
"slot" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"ifelse" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"stopifnot" "is" "isMultiColony" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"slot" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"is" "isColony" "FUN" "lapply" "sapply" "getId" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getClass" "<Anonymous>" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"<Anonymous>" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getResponse" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"tryCatchOne" "tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getClassDef" "getClass" "<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"rownames<-" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"isColony" "nCaste" "nQueens" "isQueenPresent" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"checkSexes" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"rev" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".identC" "possibleExtends" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".requirePackage" ".classEnv" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".identC" "possibleExtends" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"stopifnot" "is" "isColony" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"<Anonymous>" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"isColony" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"tryCatchList" "tryCatch" "try" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"@<-" ".local" "[" "[" "getCastePop" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".identC" "possibleExtends" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
".identC" "possibleExtends" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getClassDef" "is" "isColony" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"<Anonymous>" ".local" "[" "[" "selectInd" "getCastePop" "getQueen" "nInd" "validityMethod" "isTRUE" "anyStrings" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"getClassDef" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"possibleExtends" "validObject" ".local" "[[" "[[" "getGv" "getGv" "lapply" "sapply" "data.frame" "rbind" "rbind" "data_rec" 
"prettyNum" "format.default" "format" "format.fun" "paste" "nchar.w" "maybe_truncate" "formObj" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
".Call" ".rs.listIndexedPackages" "basename" "sort" ".rs.getCompletionsPackages" "Reduce" ".rs.rpc.get_completions" 
"any" ".deparseOpts" "deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"mode" "%in%" "deparse" "mode" "%in%" "deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"basename" "sort" ".rs.getCompletionsPackages" "Reduce" ".rs.rpc.get_completions" 
"conditionMessage.condition" "conditionMessage" "strsplit" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"structure" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"tryCatch" ".rs.valueDescription" ".rs.describeObject" 
"withCallingHandlers" "base::suppressWarnings" 
"deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"withCallingHandlers" "base::suppressWarnings" 
"handleLibraryRequireCall" "fn" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"list.files" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"as.name" "handleLibraryRequireCall" "fn" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"gregexpr" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
".rs.normalizePath" "withCallingHandlers" "suppressWarnings" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsActiveFrame" "Reduce" ".rs.rpc.get_completions" 
".rs.setEncodingUnknownToUTF8" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"get" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"file.exists" "path.expand" "normalizePath" "unique" "data" "withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"<Anonymous>" "lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"lazyLoadDBfetch" "mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"file.exists" "index.search" "utils::help" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"lazyLoadDBfetch" "fetch" "fun" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"writeContent" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"simplify2array" "RdTags" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"psub" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"grepl" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"unique" "simplify2array" "RdTags" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"grepl" "FUN" "vapply" "topic2url" "paste0" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"gzfile" "readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"gzfile" "readRDS" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"grep" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"%in%" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"grep" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"grep" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeLR" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"getOption" "file" "readLines" "paste" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"basename" "sort" ".rs.getCompletionsPackages" "Reduce" ".rs.rpc.get_completions" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"gzfile" "readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"Rd2txt" "tryCatchList" "tryCatch" ".Rd_get_text" ".Rd_get_title" "is.factor" "gsub" ".Rd_format_title" "strwrap" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"grepl" "get_link" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"regexpr" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"strsplit" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"paste0" "FUN" "vapply" "urlify" "paste0" "writeLines" "writeLinesUTF8" "of0" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"psub" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
".Call" ".rs.getKnitParamsForDocument" ".rs.injectKnitrParamsObject" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"substring" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
".rs.normalizePath" "withCallingHandlers" "suppressWarnings" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"gsub" ".rs.doStripSurrounding" ".rs.stripSurrounding" "parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" ".rs.rpc.get_completions" 
".Call" ".rs.getKnitParamsForDocument" ".rs.injectKnitrParamsObject" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
".Call" ".rs.isRScriptInPackageBuildTarget" ".rs.rpc.get_completions" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"strsplit" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"conditionCall" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"lapply" "FUN" "lapply" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsHelp" ".rs.rpc.get_completions" 
"$" "findVar" "cmpSym" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsHelp" ".rs.rpc.get_completions" 
"cb$putcode" "h" "tryInline" "cmpCall" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsHelp" ".rs.rpc.get_completions" 
"make.promiseContext" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getCompletionsHelp" ".rs.rpc.get_completions" 
"gsub" ".rs.fuzzyMatches" ".rs.selectFuzzyMatches" "FUN" "lapply" ".rs.getCompletionsHelp" ".rs.rpc.get_completions" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.selectFuzzyMatches" "FUN" "lapply" ".rs.getCompletionsHelp" ".rs.rpc.get_completions" 
"readRDS" "index.search" "utils::help" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelp" ".rs.rpc.get_help" 
"psub" "htmlify" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"psub" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"grep" "isBlankRd" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"grepl" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"isFALSE" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"of1" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"psub" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"psub" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"gzfile" "readRDS" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "find.package" "index.search" "help" 
"is.factor" "grepl" "find.package" "index.search" "help" 
"gzfile" "readRDS" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "find.package" "index.search" "help" 
"file.exists" "find.package" "index.search" "help" 
"gzfile" "readRDS" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "find.package" "index.search" "help" 
"gzfile" "readRDS" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "lapply" "find.package" "index.search" "help" 
"file.exists" "FUN" "lapply" "find.package" "index.search" "help" 
"apply" "find.package" "index.search" "help" 
"file.exists" "index.search" "help" 
"file.exists" "index.search" "help" 
"file.exists" "index.search" "help" 
"readRDS" "index.search" "help" 
"browseURL" "print.help_files_with_topic" "<Anonymous>" 
"browseURL" "print.help_files_with_topic" "<Anonymous>" 
"browseURL" "print.help_files_with_topic" "<Anonymous>" 
"browseURL" "print.help_files_with_topic" "<Anonymous>" 
"browseURL" "print.help_files_with_topic" "<Anonymous>" 
"browseURL" "print.help_files_with_topic" "<Anonymous>" 
"browseURL" "print.help_files_with_topic" "<Anonymous>" 
"browseURL" "print.help_files_with_topic" "<Anonymous>" 
"browseURL" "print.help_files_with_topic" "<Anonymous>" 
"browseURL" "print.help_files_with_topic" "<Anonymous>" 
"browseURL" "print.help_files_with_topic" "<Anonymous>" 
"browseURL" "print.help_files_with_topic" "<Anonymous>" 
"browseURL" "print.help_files_with_topic" "<Anonymous>" 
"browseURL" "print.help_files_with_topic" "<Anonymous>" 
"browseURL" "print.help_files_with_topic" "<Anonymous>" 
"browseURL" "print.help_files_with_topic" "<Anonymous>" 
"browseURL" "print.help_files_with_topic" "<Anonymous>" 
"browseURL" "print.help_files_with_topic" "<Anonymous>" 
"browseURL" "print.help_files_with_topic" "<Anonymous>" 
"browseURL" "print.help_files_with_topic" "<Anonymous>" 
"browseURL" "print.help_files_with_topic" "<Anonymous>" 
"browseURL" "print.help_files_with_topic" "<Anonymous>" 
"browseURL" "print.help_files_with_topic" "<Anonymous>" 
"browseURL" "print.help_files_with_topic" "<Anonymous>" 
"<Anonymous>" "lazyLoadDBfetch" "fetch" "fun" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"grep" "isBlankRd" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"grep" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"readRDS" "index.search" "utils::help" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"grep" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"sub" ".rs.doStripSurrounding" ".rs.stripSurrounding" "parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
".rs.getAnywhere" ".rs.getHelpArgument" ".rs.rpc.get_help" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpArgument" ".rs.rpc.get_help" 
"as.list" ".rs.getHelpFromObject" ".rs.getHelpArgument" ".rs.rpc.get_help" 
"as.list" ".rs.getHelpFromObject" ".rs.getHelpArgument" ".rs.rpc.get_help" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" ".rs.rpc.get_help" 
"grepl" "ifelse" "paste" "urlify" "paste0" "writeLines" "writeLinesUTF8" "of0" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" ".rs.rpc.get_help" 
"writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" ".rs.rpc.get_help" 
"of1" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpArgument" ".rs.rpc.get_help" 
"pmatch" ".deparseOpts" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"gsub" ".rs.doStripSurrounding" ".rs.stripSurrounding" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsArgument" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"c" "structure" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
".Call" ".rs.runAsyncRProcess" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
".Call" ".rs.runAsyncRProcess" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
".Call" ".rs.runAsyncRProcess" ".rs.onAvailablePackagesStale" ".rs.availablePackages" ".rs.rpc.discover_package_dependencies" 
"deparse" "mode" "%in%" "deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"readRDS" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.onAvailablePackagesReady" "<Anonymous>" 
"readRDS" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.onAvailablePackagesReady" "<Anonymous>" 
"readRDS" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.onAvailablePackagesReady" "<Anonymous>" 
"readRDS" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.onAvailablePackagesReady" "<Anonymous>" 
"readRDS" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.onAvailablePackagesReady" "<Anonymous>" 
"readRDS" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.onAvailablePackagesReady" "<Anonymous>" 
".Call" ".rs.enqueClientEvent" "<Anonymous>" 
".Call" ".rs.enqueClientEvent" "<Anonymous>" 
"sub" "strsplit" "unlist" "srcfilecopy" "parse" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"parse" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"handleRequireNamespaceCall" "fn" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
".Call" ".rs.readSourceDocument" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"parse" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"handleRequireNamespaceCall" "fn" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"handleRequireNamespaceCall" "fn" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"handleLibraryRequireCall" "fn" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
".Call" ".rs.readSourceDocument" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"sort.int" "sort.default" "sort" ".rs.getCompletionsPackages" "Reduce" ".rs.rpc.get_completions" 
"%in%" "deparse" "mode" "%in%" "deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"$" "conditionCall.condition" "conditionCall" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"pmatch" ".deparseOpts" "deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"%in%" "deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"dir.exists" "data" "withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"as.list.default" "as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"lazyLoadDBfetch" "fetch" "fun" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"paste0" "writeLines" "writeLinesUTF8" "of0" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"paste0" "writeLines" "writeLinesUTF8" "of0" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"psub" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"grep" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"RdTags" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"gsub" ".rs.getSignature" ".rs.rpc.get_args" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
".Call" ".rs.readSourceDocument" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"parse" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"fn" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"list.files" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
".rs.formCompletionVector" ".rs.makeCompletions" "FUN" "lapply" "Reduce" ".rs.appendCompletions" ".rs.getCompletionsLibraryContext" "Reduce" ".rs.rpc.get_completions" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"unname" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"file.info" "file_test" ".read_description" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"grep" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"psub" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"grep" "isBlankRd" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"psub" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"grep" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"psub" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"psub" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"sub" "mysub" "is.factor" "sub" "mysub" "trimws" "testRdConditional" "writeBlock" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"psub" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"psub" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"sub" ".rs.doStripSurrounding" ".rs.stripSurrounding" "parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsArgument" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"length" "withCallingHandlers" "base::suppressWarnings" 
".Call" ".rs.getKnitParamsForDocument" ".rs.injectKnitrParamsObject" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"basename" "sort" ".rs.getCompletionsPackages" "Reduce" ".rs.rpc.get_completions" 
"gsub" ".rs.getSignature" ".rs.rpc.get_args" 
"parse" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"handleLibraryRequireCall" "fn" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"handleLibraryRequireCall" "fn" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.parsePackageDependencies" ".rs.discoverPackageDependencies" ".rs.rpc.discover_package_dependencies" 
"pmatch" ".deparseOpts" "deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"base::try" "withCallingHandlers" "base::suppressWarnings" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"as.character" "gsub" ".rs.fuzzyMatches" ".rs.getCompletionsActiveFrame" "Reduce" ".rs.rpc.get_completions" 
"as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"toupper" "paste0" "FUN" "vapply" "urlify" "paste0" "writeLines" "writeLinesUTF8" "of0" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"length" "isFALSE" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"psub" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"as.list" "lapply" "RdTags" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"grepl" "urlify" "paste0" "writeLink" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"psub" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
".Call" ".rs.getKnitParamsForDocument" ".rs.injectKnitrParamsObject" ".rs.rpc.get_completions" 
"gsub" ".rs.fuzzyMatches" ".rs.selectFuzzyMatches" "FUN" "lapply" ".rs.getCompletionsHelp" ".rs.rpc.get_completions" 
".rs.startsWith" ".rs.fuzzyMatches" ".rs.selectFuzzyMatches" "FUN" "lapply" ".rs.getCompletionsHelp" ".rs.rpc.get_completions" 
"class<-" ".rs.scalar" ".rs.makeCompletions" ".rs.getCompletionsHelp" ".rs.rpc.get_completions" 
"list2env" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"psub" "htmlify" "writeLines" "writeLinesUTF8" "of1" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"psub" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"grep" "isBlankRd" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"grep" "isBlankRd" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"sub" "mysub" "is.factor" "sub" "mysub" "trimws" "lines2str" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeHref" "writeLink" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"grepl" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"file.info" "file_test" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"match.fun" "lapply" "RdTags" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"as.list" "lapply" "RdTags" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"simplify2array" "RdTags" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"fsub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"psub" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"psub" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"psub" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"psub" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeHref" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"grep" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"grep" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"grepl" "ifelse" "paste" "FUN" "vapply" "topic2url" "paste0" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeHref" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"readRDS" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeHref" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"match.fun" "lapply" "RdTags" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"grep" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"grep" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"grepl" "ifelse" "paste" "urlify" "paste0" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"unlink" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"psub" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"grep" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"paste" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.rpc.get_help" 
"file.exists" "find.package" "index.search" "help" 
"file.exists" "FUN" "lapply" "find.package" "index.search" "help" 
"file.path" "file.exists" "find.package" "index.search" "help" 
"readRDS" "index.search" "help" 
"gzfile" "readRDS" "index.search" "help" 
"withCallingHandlers" "<Anonymous>" 
"structure" "grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"psub" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"psub" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"grep" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"psub" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"grepl" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"lazyLoadDBfetch" "fetch" "fun" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"simplify2array" "RdTags" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"toupper" "paste0" "FUN" "vapply" "FUN" "vapply" "topic2url" "paste0" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"grep" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"grepl" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"regexpr" "file_ext" "mime_type" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"any" ".deparseOpts" "deparse" "mode" "%in%" "deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"mode" "%in%" "deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"strsplit" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"base::try" "withCallingHandlers" "base::suppressWarnings" 
"value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"pmatch" ".deparseOpts" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
".Call" ".rs.getKnitParamsForDocument" ".rs.injectKnitrParamsObject" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"gsub" ".rs.fuzzyMatches" "FUN" "lapply" "Reduce" ".rs.appendCompletions" ".rs.getCompletionsLibraryContext" "Reduce" ".rs.rpc.get_completions" 
"withCallingHandlers" "suppressWarnings" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"getDynamicFlags" "recurse" "processRdIfdefs" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"psub" "htmlify" "utils:::getSrcByte" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"grep" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
"unlink" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" ".rs.rpc.get_help" 
".deparseOpts" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"save" "save.image" 
"file.remove" "save.image" 
"withCallingHandlers" "base::suppressWarnings" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"basename" "sort" ".rs.getCompletionsPackages" "Reduce" ".rs.rpc.get_completions" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"withCallingHandlers" "base::suppressWarnings" 
"paste0" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"parent.frame" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"base::suppressWarnings" 
"conditionMessage" "strsplit" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
".rs.describeObject" 
"dir.exists" "library" 
"file.path" "file.exists" "find.package" "library" 
"is.factor" "grepl" ".make_numeric_version" "numeric_version" "as.numeric_version" "do.call" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"readRDS" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "asNamespace" "namespaceImportFrom" "loadNamespace" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "library" 
"modifyList" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueDescriptionImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" ".rs.describeObject" 
"tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueDescriptionImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" ".rs.describeObject" 
".rs.getSignature" ".rs.valueAsStringImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" ".rs.describeObject" 
"structure" "simpleError" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"paste0" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"$" "conditionMessage.condition" "conditionMessage" "paste0" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"pmatch" ".deparseOpts" "deparse" "mode" "%in%" "deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"deparse" "mode" "%in%" "deparse" "mode" "%in%" "deparse" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"conditionMessage" "strsplit" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"conditionMessage" "strsplit" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
"conditionMessage" "strsplit" "value[[3]]" "tryCatchOne" "tryCatchList" "tryCatch" "base::try" "withCallingHandlers" "base::suppressWarnings" 
